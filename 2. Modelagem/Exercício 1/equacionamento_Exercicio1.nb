(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    227448,       4715]
NotebookOptionsPosition[    220667,       4600]
NotebookOutlinePosition[    221205,       4619]
CellTagsIndexPosition[    221162,       4616]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
PME 3380 \[Dash] Modelagem de Sistemas Din\[AHat]micos \[Dash] \
Exerc\[IAcute]cio E1 \[Dash] 2023\
\>", "Title",
 CellChangeTimes->{{3.9048278625828104`*^9, 3.904827881686714*^9}, {
  3.9048283466106377`*^9, 3.9048283566517534`*^9}, {3.9048283885760217`*^9, 
  3.904828409582115*^9}, {3.9053263891420965`*^9, 3.9053263897210445`*^9}, {
  3.9053266001710653`*^9, 
  3.9053266257524548`*^9}},ExpressionUUID->"92ed6825-ee5b-4946-9d45-\
5c8bced03cbe"],

Cell[TextData[{
 StyleBox["Grupo K",
  FontWeight->"Bold"],
 "\nLucas Retore Carboni - 12676091\nVitor Lucas Buter - 12555700\nRoberto \
Tetsuo Hamaoka - 10334770"
}], "Subtitle",
 CellChangeTimes->{{3.9053263957797394`*^9, 3.9053264068601365`*^9}, {
  3.9053265078255997`*^9, 
  3.9053265734710975`*^9}},ExpressionUUID->"97592c5c-f144-465d-a127-\
a37ccf76f84f"],

Cell[CellGroupData[{

Cell["Item A", "Section",
 CellChangeTimes->{{3.905326522592477*^9, 
  3.9053265244351473`*^9}},ExpressionUUID->"739bb349-cfcd-4ac7-8558-\
83b6daee5b24"],

Cell[TextData[{
 "Enunciado do exerc\[IAcute]cio: Considere um p\[EHat]ndulo duplo constitu\
\[IAcute]do por duas barras esbeltas e ",
 StyleBox["homog\[EHat]neas",
  IgnoreSpellCheck->True],
 " OP e PQ, de mesma massa por unidade de comprimento \|01d707. Neste\ncaso, \
as massas s\[ATilde]o diretamente proporcionais aos respectivos comprimentos, \
ou seja, \|01d45a1 = \|01d707\|01d4591 e \|01d45a2 = \|01d707\|01d4592. \
Admita desprez\[IAcute]veis os efeitos ",
 StyleBox["dissipativos",
  IgnoreSpellCheck->True],
 " e considere que as juntas de revolu\[CCedilla]\[ATilde]o em O e P s\
\[ATilde]o ideais. Considere ainda que:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "p"], "="}], TraditionalForm]],ExpressionUUID->
  "b0a2309e-3172-4943-bfb6-05617f2b85e4"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["g"], 
    SubscriptBox["l", "1"]], TraditionalForm]],ExpressionUUID->
  "88c0ba36-353d-4d0f-8029-a75fbe376d08"],
 " = 1 ",
 StyleBox["rad",
  IgnoreSpellCheck->True],
 "/s e \[Lambda] = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["l", "1"], 
    SubscriptBox["l", "2"]], TraditionalForm]],ExpressionUUID->
  "7f506d8b-1a34-49b9-8da2-c6372c507614"],
 " = 1 + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["\[Sum]", "j"], 
    FractionBox[
     SubscriptBox["D", "j"], "20"]}], TraditionalForm]],ExpressionUUID->
  "b0798fb5-7cdc-453b-a772-e574ce9bc018"],
 " =  1 + ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "20"], TraditionalForm]],ExpressionUUID->
  "240dfc45-57d1-4d51-98e4-8ecd2f62386e"],
 " = 1,05\nO esquema proposto \[EAcute]:"
}], "Text",
 CellChangeTimes->{{3.904828416443489*^9, 3.9048286267816133`*^9}, {
   3.904828685932721*^9, 3.9048287829190426`*^9}, 
   3.9049087411212745`*^9},ExpressionUUID->"46e7fd58-6aee-4c36-89d4-\
6d989677a0ad"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdcnWmV/9feHde269rrFl3rurr6d0cdddVVV111dZxeMiW9kkBC7z30
EggQEkilhZBQUyhJaKGGhN577/X3f89zc2+AZFJfQsrv+/mcIcC9dy5w+XLe
85znPJ99Ye3vV7z5b/7mbza+U/vP7583+9GGDc9v+98PaO/8cc3G115Z8/JL
v1iz6eVXXt7w3Rfeon3w5Jv+5m/+pMVbtX+DEEIIIYQQQgghhBBCCCGEEKIL
09PTmJqaUiH/lpidncXc3Nx1by8fN37eGIQQ8jAjnhsaGsLIyIhy5c2orKxE
bm4uMjMzTXH58mX09fVd48zx8XE0NjYiJycHJ0+eVHHu3Dn1MXEtIYQ8bBhz
SfFkYWEhmpqabnofW1tb/Pd//zc+97nP4VOf+hQ+/elPw8zMDMnJyZiZmVlw
2/b2dsTExOBrX/saPv7xj+MTn/gEvvvd78LS0hKTk5NL9WURQsiyIV6VHHX9
+vV4+eWXsWvXrpveR/LTzZs34z3veQ+kJVfiRz/6Edzc3DA6Omq6nfi6tLQU
69atw9vf/nZ1u7e85S342c9+huzsbOarhJCHEnFqc3Mzvve97+HLX/4yVq1a
hY6Ojhvep7e3F7Gxsfj617+ON7/5zcqXf/u3f4sXXngB3d3dptuNjY0hPT0d
v/rVr/CmN71J3e4rX/kKtm7dioGBgaX+0gghZFmQmurp06fVNfqHP/xh/OY3
v1E10ButLcn1u+SbTz/9tCkPfetb34onnngCKSkpah1LED9HRkbi85//vLqN
OFjuI3UB420IIeRho6enB3v37sV73/tevPvd78Z3v/sf6v3FddL5yPW7rFNt
374d73//+021gH/8x3+Et7c3JiYm1O0qKirg6uqKD37wg+rz8vhSV01LS2NP
ACHkoUTc1tDQgI0bNyrvybW6rEWZm5tjeHj4hveVtf/4+Hh86UtfMnlVHPvr
X/8a/f396jb79+/Hiy++iLe97W3q87K+JR+rqam5F18eIYTccyQnLSkpUXVV
oxslb/3xj3+M6urqG95Xclbx4x/+8Ae1FmWsn37xi19UfVTyeVkHk8c21mBl
vaqsrEz1XhFCyMNIV1eXqn8a80ljnfQLX/jCLfUFSG02NTUV73vf+0zu/Pu/
/3u4uLigvLwc3/72txf0DISHh6uaK/sACCEPK9KbL/VPo/eMtYCPfvSj2LBh
w03vL/muXPN/5zvfUf6U+37gAx/Ak08+CS8vL3XdL56WkDUxyYGNtVdCCHnY
EL/l5eVh9erVC7xqXF+S3ihZs7+V9SWpoX7kIx9ROavc94c//CGef/555VL5
2GOPPab6uKRmy1yVEPKwUl9fj8DAQJVTLvaq5J3vete70NraesO+ACNJSUmq
L/Wd73ynqilIX5XEO97xDuXVz3zmM/Dz86NTCSEPNYcPH1Z5plyjL/aq0a32
9vY33SMgiH+feuop1We1+HGkPiB7saTvgBBCHlZkH5SFhQV+8IMfXNepxpDP
S7+A3P5GyD4BT09PNTPA2BdgDMlVN23adNO+LUIIeZCR/PKPf/zjdWsA80P2
YO3btw9VVVU3fDypwcq8KnG11AKM95eagKxp7dmz55bqCYQQ8qAiOajkoh/6
0Idu6FXpn5KeqbNnz970MWWtX24r61bze2Fln4DsiyWEkIeZqKgota/K2HP6
RiGfl7qp5KzXW3OaP6Na9rXKPCtZ75pfA5A5LrJXlhBCHmZ+/vOfqz2ni2uh
1wvZI7Bly5YFfafiUrmul7qq7J2SfqyIiAj89a9/Na2DyWO/8soran2MswAI
IQ8r4sba2lrl1DfqA1gcskdVelmldmCkrq5Ozf9zdHRUNVXZ8/+Tn/xEzaw2
3k/mBpw6dUrNFCSEkIcVmY0qfaRyrS7z/YwxP8cUj8rnJaRWKn1S3/jGN2Bj
Y2N6nPPnz6t9WjILQNa+pHdV9lnJOpVxb4CDgwNaWm6t/5UQQh5UZJa0v7+/
6ic1xve//3189atfNc0GkH5+yT1/+tOfqjkpEr///e9hbW1tehxZ+5fawPyc
V3wqXpU9Vt/61reQkZGhzswihJCHGTkbQGYCyBqTMYqKihAcHGzq4f/LX/6i
5lRJSM3AGPPPvSooKFDX/+JRY44r5wV88pOfxOOPP65qrVJ35f4qQsijyODg
IBITE01eXbFixU3vI7NWgoKCTLWCj33sY2rvlszAamtruwfPmhBC7l/Eq7K/
/3a8Kuv7sn9K9rhKyLxBmXMtOSrrqYSQR5078SohhJA3Zr5X5ZqeXiWEkLtD
vHr06FGTV+XsFEIIIXcOvUoIIfoiXk1OTlZelfV9epUQQu4O6d0/duyYyasv
vfTScj8lQgh5oKFXCSFEX+Z7VWZS06uEEHJ3iFdTUlKUV+WcP9k3RQgh5M4R
rx4/fpxeJYQQnaBXCSFEX+Z7VWaxvvDCC8v9lAgh5IFGvHrixAl6lRBCdEK8
mpqaSq8SQohOzPeqzKl+/vnnl/spEULIA414NS0tzXQOC71KCCF3h8ynplcJ
IUQ/xKtyZjW9Sggh+jDfq3L+33PPPbfcT4kQQh5oxKtyJrXxrOpnn312uZ8S
IYQ80NCrhBCiL/QqIYToi3g1MzOTXiWEEJ0Qr2ZlZdGrhBCiE/O9+qY3vQnP
PPPMcj8lQgh5oBGvnjx5UnlVgl4lhJC7Y2RkZIFXn3766eV+SoQQ8kAjXj11
6hS9SgghOkGvEkKIvohXT58+Ta8SQohOiFfPnDlDrxJCiE7Qq4QQoi/0KiGE
6It4NTs7m14lhBCdEK/m5OTQq4QQohP0KiGE6Au9Sggh+jI6Oorc3Fx6lRBC
dEK8mpeXR68SQohO0KuEEKIv4tWzZ8/Sq4QQohP0KiGE6Au9Sggh+iJePXfu
HL1KCCE6IV49f/48vUoIITpBrxJCiL7Qq4QQoi/i1fz8fHqVEEJ0YmxsDAUF
BfQqIYToBL1KCCH6Il4tLCykVwkhRCfoVUII0RfxalFREb1KCCE6Qa8SQoi+
iFeLi4vpVUII0Qnx6oULF+hVQgjRCXqVEEL0hV4lhBB9GR8fR0lJCb1KCCE6
Qa8SQoi+iFdLS0vpVUII0Ql6lRBC9EW8WlZWRq8SQohO0KuEEKIv4tXy8nJ6
lRBCdEK8WlFRQa8SQohO0KuEEKIv9CohhOjLxMQEKisr6VVCCNEJ8erFixfp
VUII0Ql6lRBC9IVeJYQQfRGvVlVV0auEEKIT4tVLly7Rq4QQohP0KiGE6It4
9fLly/QqIYToBL1KCCH6Qq8SQoi+iFerq6vpVUII0YnJyUnU1NTQq4QQohP0
KiGE6Au9Sggh+iJera2tpVcJIUQnxKt1dXX0KiGE6AS9Sggh+iJera+vp1cJ
IUQn6FVCCNEX8WpDQwO9SgghOkGvEkKIvkxNTaGxsZFeJYQQnRCvNjU10auE
EKIT9CohhOgLvUoIIfoiXm1ubqZXCSFEJ8SrLS0t9CohhOgEvUoIIfpCrxJC
iL6IV1tbW+lVQgjRCXqVEEL0Rbza1tZGrxJCiE5MT0+jvb2dXiWEEJ2gVwkh
RF/oVUII0RfxakdHB71KCCE6IV7t7OykVwkhRCeu9eozy/2UCCHkgYZeJYQQ
fRGvdnV10auEEKIT4tXu7m56lRBCdIJeJYQQfZmenkFPTw+9SgghOjEzQ68S
QoieiFd7e3vpVUII0Ql6lRBC9EW82tfXR68SQohO0KuEEKIv9CohhOiLeLW/
v59eJYQQnRCvDgwM0KuEEKIT9CohhOiLeHVwcPCqV5+hVwkh5G6YnZ2lVwkh
REfEq0NDQ/QqIYToBL1KCCH6Il4dHh6mVwkhRCfEqyMjI/QqIYToBL1KCCH6
Qq8SQoi+iFdHR0fpVUII0Qnx6tjYGL1KCCE6Qa8SQoi+0KuEEKIvc3NzGB8f
p1cJIUQnxKsTExP0KiGE6AS9Sggh+iJenZycNHn1GXqVEELuCnqVEEL0hV4l
hBB9Ea9OTU3Rq4QQohPi1enpaXqVEEJ0gl4lhBB9oVcJIURfxKtyJiu9Sggh
+iEzAuhVQgjRD3qVEEL0RWoB9CohhOgHvUoIIfpDrxJCiL7Qq4QQoi+mOYFP
P73cT4UQQh4KmK8SQoi+0KuEEKIvrAMQQoi+0KuEEKIv9CohhOgLvUoIIfpC
rxJCiL7Qq2QpkVmUo6OjGBwcVDFw5a2csS77qOcj560NDw+jv7/fFPL+2NjY
Mj17Qu6Mq15lnxXRF/Fmc3Mz9u3bhxUrVuDFF1/E888/j5deegk2NjbKmUZk
tprc1sLCAv/7v/+L3/3ud/jtb3+r+v+ioqKW8asg5PahV8lS0tXVhQMHDuCr
X/0q3vWud6l497vfjX/6p39SvpR8Vuju7kZsbCw+//nP453vfKeKj370o8qt
FRUVy/xVEHJ70KtkKRkfH0dVVRXMzMzwtre9DW9605vU6+2xxx5TeWlHR4eq
CZSWlmLlypXKu/L59773vXj88ccRFxen6giEPEjQq2QpkVrA0NCQ8uOnPvUp
vP3tb1evN3n75S9/GQUFBWhra0NiYiL+67/+S3n3zW9+M/75n/8Zq1evRl1d
3XJ/CYTcNly3IkuN1E4l53z55Zfxd3/3d3jrW9+q/Cm5qaurKw4fPozt27fj
gx/8oClX3bhxIxISEkx1AkIeJOhVcq+orKzEb37zG5W3GusBkrN+61vfwuc+
9zmVp8rHfvjDH+L8+fOqb4CQBxF6ldwrpI66Z88ePPvss6Y6qtQD3vGOd6gc
Vuqvks+mp6ejt7dX5bmEPIjQq+ReIbXW8vJyuLu74yMf+Yh63UneasxdpQfg
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
4sQJHD9+3BTyvZY98vNDronl+y+RlJSkIjExUZ33LBEfH2+KuLg4FUeOHFEh
e/APHTpkioMHD6rYv3//goiNjUVMTIyKffv2qdi7d68pZB6qMaKiolSI34wR
ERGB3bt3q5C9+xJhYWGm2LVrF0JDQ1WEhISokDMCZPbK//3f/+EDH/jAAqde
L2T+qvj3q1/9Kp544gk8//zzakarfF3ys2lvb1f1Juaz5G6RntOGplpE7AlU
9c9tlquUV/POn9E8VorKqitxsQQVWpxIS4CL+w51u7WbnldeNdv+OuISDmgu
zFL+ER/NP29YZmJImG3dgj/++Tf49W9/gj/9+ddwdXXUfi8C4Ohkhw0bV+G3
v/8v/M/vfgaL7VvhvdMT/gF+CAjwVyH/9vf3Q2BggPY7Fmr6HZQZxXIdaAxv
b28VXl5eKuT6T8LDw0OFnC1nDFnrkJCz5iVcXFxM4ezsrMLR0dEUxq/D3t7e
FDLzQ873MIaNjY0prK2tYWVlpcLS0lLFjh071Jn2xrCwsDCFubm5iq1bt5rC
zMxMxZYtW1Rs3rx5QWzcuBEbNmwwheRjxli3bp2KtWvXYs2aNaZYvXo1Vq1a
pWLlypUqXn/9dRWvvfaaildffVXFK6+8ghUrVpji5ZdfVvHiiy8uiBdeeEF5
SuK5555TIdffEs8888yCkJ7mv/71rwtCzlD5y1/+ouLPf/6zCvGlMf70pz+p
GdUSf/jDH1TIHFWJr33ta6bzV241ZF6g5K/iV/ka5WcjfxPkb6OcLyi1fkLu
BLn2kevvA4ejsMHsZazb9ALMLF5TvaoeO22vhI0Kd29DWGjulRqp5KgS4lV7
521IOX5Uy9FylFMl3v3ud6sal7ze5YxMiQ9/+MPqeuy9730P3ve+9+CDH/xb
fOhDH9Ryjcfw/sfeh/dqH5O38vEPah9X8UFDfOjK+/L2Ix/5sFqfkHjsscdM
898kjDPj5oecxWGMG33ueiFfh8St3EavkO+ZxO3e/npxJ//fO7nv9eJm39vr
xfV+fjcLWa+6HafOD+PZV/L1ynzs3/3ud+p6gucJkDtFagA9vV3Kqy4elura
XnqixJ/iUk8fO1Ofk+SwO/0dVfgGOqv3HVy2adftz8HW0QzJKUnIyc02efXx
xx/H5z73OfVaNTrw7/7uoyaHPvaB9+NjH/t7tY5rik9/Ss3JlPUGY3z2s59R
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
FScgNy8ayalBoh+Bl+8r2JL/5Vou7gvDfQmy85PR1tGAsfEhMbOL48HfrHb2
dB8zg2XobMhAaXkW2jvrMTw5gW2NFjrBVQIn+VY9rf/np/swPTWIBfUKjgwm
6VOlpH5Acb7VAbF1ZGRAsJVrrjje6vryN7Tcu4OYZ3dha/UrnlndIT/7EFGx
gYiOD4Kb18t38VNHWuP7+FsjOtYLqekhon+LJSbwKb6WncVkufdLbl4U0jLC
xFyYUJULPHysREyW53P5BzkjIsZf9IQdmxjG5tb6X/q/fBU/e3qIlak2DPdU
oLmlAr3DQ9jY3SevahI5qqcnRhgO1zE32YPp2Wksrq5BQ17WpKfDdHJNPLeU
lNTXFPvA/f1dVFYXixos30BHBDg/Rceje0ixeYQAL2sEhriKXliNzVUi7zU1
M0bsRfFtea42c9A3wFas87m/K+9nsSdlbpaUJn0xXsDXM4/Tia+hKlfRr4B5
zXFcW8cHCAx1QVFJNnnFRrwZ7sXs3LToYcizvAzkZTkX/8o4e6rHzuoklmYG
MDbWj5mlFegMZ0wln2o8PqDrJzAy3IW5lRWs7+6J3DLtzjq0Oj1OZJ6VlNQP
KeYRr7W3dzZEfn9XdSnmPT3QlxKPgY4mvH07Aa1WI/IIOEdKd6yj225hcmoM
jS0KZwOCXeDq8RLW9vfh5PqEOGuDiGgPwVlmbEnJl/lqOYqJsZlZKnFf7rft
4cPnvSdmdbl7WyE8ykfECriv7MLijPCxXFNrOIsXXDZfT83K6zaJ/LD3l5tN
yj7VaH8NBiamsLa9ib2DbexuL2NmuBvqnT2RDyC7CEhJSWFvD8jIAoaGuXkr
vrT5wvVVOt0R1slDdnQ2QRXlK2IHj5//LA7Od3Vxf0KcDERhcYKIs34qTvCp
g3MMOF/WP9he+Njn1r8qNbjkZ/2DnVFcmo3xiWHi/SaOyS+azva+rk6nMB1t
YWO2DQ01mWhsraLXXo2ujnK0tbxGZV01lnc0MMh8ACkpKRZzNTMHeDN0Ia6y
2CPyepx9r+bwAItLc+jubUV1XQmS0yLhF+SEV3b3YOPwh8i78guwFfO22Jdy
DKDsC6y15HCx7y3Ij0FWajBiI9wQQOfhmbIOro/h6PZE5DekpEejuCSbHr8N
yysLoj+i8Vy84LLEflV3sIbVlRl6nFmo1XPvjpW1VejOYrBSUlJS2NsHsnKB
wTcX5up5WeIKXF/F8QL12jJm56fR09+BvMI0xMQHiVxWa4f7Ysa2m9dz4q6d
qCsoLIxT5hh8grHVpSloS1Vh2tkW06+eoyHcG8WJgUhND0VUrBd8/G1ErMDD
1xpe/nYIDHVFdm4SOruaRf7+1vYGvaTDS2HsqchfNcBgOBa1wfz13WE0SqZK
Sd0QmU166LR72N5UY1W9gMXFWcwvzmFxeZH4tiL2e9aIc+rVZaxtbmD34FDs
bf+FAMzV7Lz/masfinduzKdmHJCPHR7tR11jheiHFUje0s3rFZzdn4m9L39i
a2y8j9i/ysmNQn5BrPCypWXJgrNVxNvm3FgMh/vi4MFDaO/ew2iIN9oyokSO
QU5elPDAvoG2xNYXImeBZyP4BjggLTNG1CJ09bRgfGIIK+ol7O7tvPeyZrl3
LyUl9XEZDjewPj+EtrocZKeHIDjEGX6hPgiPDUN6XhqKSnNQWJSKzOx4ZOZn
orSpFVPqLRjM5+KAzNUc4urAIA9w+ddc/VDcV0+v14k1OuepFhSli1mF3BvL
jvyro+uf8PS1EjMOOX8rIzNM5BbU5cagLzoAG1YvcPrTLZz85xcsuthjICbo
L56Wc7iYyWnnPKyj62Pyxg/h7PYMQeRh07PiBd/7BjrpM0epq+VaCeYrfwZI
SUlJWXRKXDAZj3GwvYTxzgx4ONyFXaAKsYU1mFZv45jWq0eH25h9U43aQhX8
aM0ckJiN2Z0jsccixFzNLQD6B4ir2kvn6ofi/SXOpeW47OT0KBJTI8jDPoeV
rTJvi/enXJ0eocnqMeYf3sfJ//0C/L+fYfr5DuY8nNAbH/LFfS+e5Z2dEyFy
FLgPl2WWF+frct1DEj2mYOzSvIhd8Lr+h5zjJSUl9XERB016DTZmaxHseh9u
MRlIr+3F+oEln94Mo2YBs4MVSFPZwMbVHlUDszg4Nio5QfvE1bxCoK//q3D1
/dM+FblMRzotNjbX8HZmEq0tNShKi0bL04fY+OU29P93SzCVj+Ofb2PI1RaN
UX4X2vsqr0gVt1HyuMJFvZgqyl3UNTi7PxX7XpyTy/kMPBec+3DNzE5iZ2cT
h8R8jhfIWIGU1I8rk+EQWwuNCHX/A+6xmcio78PmoeHd9afGLay+bUFxogus
7Z4jr3UY24e0DuYrmav5RUBv31fl6nlxvujxkRYH83PYTE3F3m+/w0RMPT1j
Kh+a/95CxZPfEWf/SMQNVJHuwpMWcy5XaTJx9DM1X8RXZjHvk+XlRyMrOwKx
8b4ICnWCX6C92Pvimi/OY+AYRUFxBnr727G0vKD0MBC5sieQWf9SUj+OTEYt
thabBFfdYsmvfsBVmLaxNtOG0mQ32Ni/REH7KHa057ha8A25yo+n14NMq4jx
ngaF4ZTW/Pjp1jumCq7euoNK6yeIdXom+rdwHDUy2hNJyYFi74vrEQpFzVfy
Z3MMLAfHZBOSAt55WBePp7B1pP8/LyuRV5CZE4+GpkoMj/RjYXEW6xurxNg9
pZ+VyXSNesVISUldhU6Iq9tLzQgTfpW4WteHDc17rp7o1Fgcr0NBgiscPdzQ
OLYMzbFRcV/7B8TVYqCn99tw1UDP8+1boKYOBDXg51//wlPLYfjjMaZTE9Fe
mIXsvCSERniJ3AKeM8tzvLnmSxXphpTU4HeMLb0AYy11te89rCO8/F6JHFkH
lz8REOws8hlyC1LQ3Foj5jBy3IJn3fLel+SrlNTNFHN1Z6kF4R4P4B6TTlzt
xbqFq6cm7Cz2oLs2GWHEnuDMEqzsH8N4csYC5mpRCdDd8/W5yntFXI/gEwA8
fvY3j/qX44WN4me3t4Vf5JqvmdkplFTkIY645+r5UuklY3Vb+E7uxR0V64ks
jhVcIB77YdyAYwbcH8bbzxoOzo/o3L+LfS+e8xUZG4DqulL0DXSJPAfOkZVs
lZK6WVK42goVcdUxMAhhGTlo7u4iZHWhvaUEBXlxSM9KQF5VHSbU20pfZgsG
DoirxaVAVzdw+BW4yizV6cijzipx3acvgTu/A/+5rXjV23eBsxwAcfx0S/nq
7Q9MTgOaQ3EaS80X97viGOiyehH9g12ixjU2IRjBYe7Cz9q7PBY9B4LDnBAV
7Sn6cHEMwBKT/VwvLkvNV25uFNLTQxET6y1ism5eL0StgxIzcENiigqVNcWi
d/fs3JTo3839WGSOgZTU9yvB1WXiqucDOAWHIjwrH+39fRgdG8DISD+GR4cw
Tmvt5Y3tv/cKZa6+LgM6u4irh1fLVfKZmKY1f30jCEjAE2Lqf+8oLL33SPn5
1/sKS/97WzksOQEJKcDSCnCs/9tpmV/cH5vX5tyXhetqeUZCT187vbRchEV4
iX0p7nnIcVSu+eJ+3ckpQWL9z/my7FE/FytgDvMeGffszsxWif4H0XE+Ys6X
t58NHbZi34vjE6mZsahvqsD0zAQ2N9egIe7zZ4CUlNT3o/NcdQmPQmxhJYam
3oqe/CurK9ja2cU+eVGDyfx3bDJXS4irHVfIVfZtHEedIY9aXAKoooCHTxWP
evt3JQbAvvWFtfIz+9Vf7ym85dv8dEuJAfPelsH42YcS+VvEb71eL3oijk+O
oLwyX/Qt4H6HPoEOcCW++tD6PiTcRex9JRMjs7JUKKC1v6j5+kxc1tJvlnt2
c51YfKIfgsnDin6H3LdA1DnYID4pVMz56u5ppc+3N1jhediWOTRX0L9ASkrq
csVc3V1pQ4TnQ7hFpyK1phurB4Yv35F1oAFKy4mrnVfHVSOxcG2dPGoIcPeB
ws2fbgG3fgNsHGiN7wdatAN/PFa86W9/KN6V2fvLXcXTtraDjJ/C6H8ozpHa
29sWdb49fW2ixpX7z/KsbuFh3Z/SU3iFMJUr4hP8RP+BPPKl5/NkKz4Zj00X
HOZZCkkpgaLmi+d8uXo8E4z1Ih8bHO4uuF5RXSTyC7geYXNrQ8SI+TPgVNZ8
SUldOylcbUekF3E1Khmp1V1Y3f8HXC2rANo6ro6rnEc1PgE8eqqs7Zmd/yG2
3nuosNbeSbmOecsxVjdPwNaRLnum/Pz8FQ8/VM7zL6XEZU2ih+uyegGDwz0i
XzUozF3s/3NtFh/MRPahPBORGct7XxfpKfsuX7YkCSlpwSLewN6YZ33xPEXe
9+Jeh4mpKtQ1lmNsYgh7+ztn/V6lf5WSui4SXF1W/KpzRCKSKtuh3r8gg9gD
llee+cErjAMws5nf7Et53f/fO+8967vviaFWtkCoCnhqpfjW38nfRsQoeQuX
GKNkhom4LHlp7t3Na3SerVhTV4b8onSx5+/hYyP4yvFYb39rYqSL6MPF6//i
4kSRK/vJfS9LXLYsWcQMssjPckyWz8Fzvty9X8KZPC175pj4YMH22oZyjIwN
YnVNjUOtRvBfelkpqW+hUxiP97AyVoYA13uw8fVHRE4JxlfIA12EkczViiqg
pe3quMpitm5tgRbCSq4q+1SOpZ7PpWKuclzAw4d4Sl72F2Lui1cK900nV7qn
xrECjn3u7G5jbW0Fc/PTGKI1O8+s4X4CEdG+Ym/KzfOFyJcNCLJHeKS7yJfN
+8KMhPMetqAgVsQMuE8MxxzCVW7wDbSDT4Ad/IIcRU1CTEIw/UoKRQ8D3n/j
foec9yAlJXX14j6BRxriwNI4ehuT4eX6B2w8XOAXG4+63iEsrG+KOaKfxdHX
4iqLz831XSOjQHwScOee4lMtB+9R8f4Ve1aOq/LeFftbrln4SnrvYw3CM3KO
bEtbPVntfMHXUJUnYd+aPKc1fPxthf/kegLOwxL1CIVxgrGfype15G9xTJb3
yTjOEB7pBr9AW5EPptQ5vERkjB9y8pMFXzmvgfO3mK8850uJy171jAQpqR9T
Bs06Vmd60VgWj7hYbwQEO8Ev2BVB4d6ISopCRkUdlnZ173tXfUzM1cpqoLlV
+f4qucocWN8AuomTQWHK+p/jAPcfAXf/eB8PsOStPvgTZBSVPa9vKGYt97za
2lqnj4RBVNUUIzUjmp6aHzx9beFKHtbT5xX9/zsgPMJN1BNwPcJFa76Ywexj
s7JVSEjyR5jKBe5eL+BMjHX1eE5e1h5RcQFiLgL37Ob8ArV6UczXvao5X1JS
P6p4xp3JoMORdl/03eP8Te2RRsz9O+TvdTpRA/DZdxx71Kpa4mrL1XKVz6tW
A8lpIFMGWHoA+AUB1XVKTkJA8Pv8Vd6vsndWYgbGz+dWfW1x3PPo6EjEDHj2
Iueq8kxwjpU6uT0VtVncY9uP1vc8p4tjBZz3yoy9yHwvUVtLnlfMUyRGh4Q5
id7dPKeR970c6TFCIrxEHLi3vxMrZ4yV/lVK6pJ0NvP5U8cXxVxldjU2Xw1X
+b3OOQcDb0DGTombsi/lOgB/4uj8glI/e3wMbG4BLe1KXSvXDXD/wqXly30+
lyRLvIB7Y3Psc29/FzNzk/Qyu8n+Fwk/y30IueaLD96n8g+yF5y1zAa35HF9
at9LxGW55ot7dxOXmc9RMZ5ixjjP+XJ2fyJiEiEqT9HDoLg0B909LSJveW9v
R8SLOW4sJSX1lcX79LX1QEPT5XKVz8M1B1yvynxkpvI+Fe9N/flcia+OjAF6
w/vH5P1+3vd/OwPMzil1APoL5ot9YzFjOVbA64bt7U3BNs4vaGqpQWlFnug/
GBTqQhx8Jepgudch18TGJfiKmi/Ri4s86qfiBZaaWq4N47wv9rKcL6uK8hDn
CQh2hG+Avaj54tzcvMJUVNe+xiBxfml5TuQ8SD8rJfWVdJ6rB5fAVb4/85Hn
vA4OKet73t/n9T3XT9nYA+GR5EvP4rkfuz/Xu/LxndZ+ilmKJqOYpch9Cyam
RgRf8wpSRM0X+1hPX2txcB1sVIwXMTII6eRj8wpi3/eU/Uhc1lLvpfTsThD3
4X0zVYQbcdVW1CO4ej5HUJgbouMCkJufTI9dhcnpMTHnjPPJRC8uvV7pKSvj
slJSly/mal2DUrP/b7jK9zOalN4tvDfF5/PwVmqmeN1/52xvv7ZB8bDMzR9E
HOE+MfPsmX1MTY+irb0BZRUFSEyJEDUC3L+F6768BGcd3sUKeO3Pua/M0E/1
7bawlr0s357zt0RP2QCbd3tf7JG5b0FGVrx4XO7ZzTNzeZYi95PlzwCZJysl
dYlirtY3Kmz9N1zl8/D6PZ/W/I6uyj7/T7eU4/5jIC4RWF5R+gT84B6J1+O8
j899uNSrS2jvaBQ9ZXkmONe92jj8AWv7e8TF56Imlv0or/s/Fyf4WJ8Yzvni
nt/sh7nmy1HMrKVzOzygx7FDWmasmKc4+KYHGxurMhYrJXVZYn/JMQCOBXA8
9CLM4zgd+02ei825/nV0X09a6z97pfhSS88/7qMSHA50divM5vv94Ey1yLKv
yCzjXFmtVit6cfEsxZb2ejFziz2mT4CD2PcS+Vb+1iKPK+6Ms0VneVzco+BT
PvZ8P1klJhskYrJ+QXZizpeLxwuRxxAZ44+S0mzRT5b34aR/lZL6F2KuNrYo
OQGf4yrHOtmTck8q7iVQXgVayAL+QcBLGyWHn3OnfrsPOLgAOflAVw8wN3f1
ebE3QJY+XLy/xH24Vs7istxTtrahDFk5iQiP9IZfoAN5TWuRd+VHa33u85KS
FiL2vjgu+7l+sqXn5nxl50YiOTUY0bHeUEV6wD/YkfhqK3wzz53h2LCUlNT/
KAtXq2qAnV1lnc45T8zQzU0lz4lZOjquzBTg2QJRsYBvIGBlp9TwW+KnXCvl
5Qt6cwLjdPvdvUvplfKjSWGsUeRJcQx0YWkOvX3tog9XUlokVFxTG2An4rGc
uxWqchVr/ZSUYOTkRAkfW1L6vubrQz9rqflixnKvA47JRpCH5TwFrqNllrN3
/gdPWMxcN+h10NFzFvnTh0oOtY7+lgxGE064duHq/sukpK6PeGgA79uzV+W4
6OQUsLio9J7m+QHsOcNUSn+pJy+UPX1e3zNHRW//35W+f9xHxZN4mp5F953+
8p4Ue1eOCci4wIXFrOWZ4JxfMD4xLGZtcZ0r9+HyIL7yvhcffgG2oqdsSmrQ
WU/Z2He9Cz7nZdnr8ixw7ulV+DpD9H+52PMyi9oUrWYTy4vT9OsfwRjdd2io
F29GBjH5dgqLq+vY2tN8vP+vlNRN05FOySHl2ChzkmvymZWcD2XpM8W9+yz9
UkV/v9sKYzkflWunuJ5gcUk5l+kC+x4ib4A8Ma11sbIGaMgb86wt+X67sCwx
A+bs2oYaQ8P9Io+LYwUhKi/YOT+Gtd092Ds9IE9rhbAIVxEryOfeBZ+o+WJv
y/1gnN2eIiU9mpYmbRd4JmYYdbtYne1DzesEJKQn4XVVKWqba9HeWY+mujyk
JPgiPDYcSXl5aBmaxv7xj5MHIvWDiuuc+vqBl7bva/ItHLX0QuUeqHZOoIWi
Mg/7zTCgXlViBtojJW7AsdeL5Jyb6PbjHUB1ARASBHgRm/3i6DnMAKv7V/1q
b5ze1XydmJSaBJ7ztTIv+rRwLUJGdrzIY3Vxfy72qDgmyzmuvG/FvWEt8xH4
4FoDjrVyX8SyynwR2/3sY5tNOFgbw2RfBfIzwhGblYvRBTW29g9wqNOJ53Os
3YN6bgCNJdHITvZDUEQgsmrbsXt8ghP5OSp1U8V198zIjBylZ39GtjLvhOey
cGyA9/GHRpSe0guLSl4q5wDwOv+f1O7w3rJeA3RUAznE1PxyoHcIGKXzR4cC
qaVAE/2sl2+2/13n+nAdarCxuSr2n0ZpTd7W0SB6CfBsGFWUj+hJ6Or5TMya
DQ51FDMV/QPtBFM5dst1Ylw/8LnH0h+sYKA+FYVpgVAlxKJuYBKHx0Zasphh
5ngr/6Pfu/H4ABuLg3jTWYzUODd4BAWgenAe20cGGOWvW+omylJrWtdIa/pU
pYZ/ekap2eceUrynxX7UUvv0v8ZDDTpiMp03IxHIJKY2kEfePiSO7hBnI4Gw
JKCoFdiX+ZOXJcusWmbs+sYqLTP6UN9YKebVJiSHITDUReTKMmN9xWFPnLUT
e2OcU8t9ZT4tM/ZXBlGW7ov4aG+Ep+VgZGXv438azNajTazNdqEy2xfOLi8R
U9KCmU0NtCaZyyV1Q8Vr+fZOpZc/72Fddg05e9WDbaAlnzyxCuiZozW/5T1L
1zWQRw4IAVJeE891l/vYUu/EMQMxE/xgX8yrFTPBy3KQmhkjcgw4ZtDQVIXN
rTUxQ+HT9a3sQ42Y7clFWIANfIJ8kV7dgS39Z/5uTk+g21/BRFcegj3/gK1/
COpHFjC/eyzD6lI3U+xLeBYr1/FfBVf13EelBwj1BtIagK1DgVNF9E1rIWgR
CsRxbtbe5T621CfFMQOuYeVeAexptUeHIobwxX4BxEizaRetRYFw97SBlyoK
5b2zXwzhnOj3sT7bjuyIV/jT1gqZtV3om1uH3MWSupFirnIclWOql83VUz2w
Sev/6kzA1h0YWCZ/bOlPxW9EWvc35YIWocRV8rOTMhf9a+rvPSW/7B5PzUac
HC2hLMUJzh528IlJQv3oKr70V2M2HWFXPYzKVBc8fvEIsUW1aBmbx7E0rFI3
UcxVrot6Xark8V8mV4+2yIO2A/HETfc4YHkfMJ7NqeL4gJnW/RUpgHcQkPga
WDi+vMeWuhKdmg0waeZRGG8DB3db+MYmo3Fs/ctcPTnG/vokGrI98fj5A0QX
VKFpZBY6GWKVuomycLX4srlK7NxZBDoqAD9HwCuR/Cj9rF4D1teBtVVgdQ5I
Dwc8Q+kr3W7t++i1+iPrHVcTbOHgZgPv6ATUj6ziSzuO5hO94GpjDnH1xUPy
qzVoHp2TflXqZorz+XneFNen7u5eIlfpPEtvgLJ04OVTwC0MyCtRHqeYvxYB
+ZmAsy152Rj6vpmeC787z/q3cg6YOExns1gv6WlJ/TuZTTg5WkF5mjMcXV7C
PSxSxFcNX/izMZt02F0dRXW6G/60eYbUqjZ0T6tlrpXUzRRztacPKHx9uVwl
X4ORevKhxMwnTkAK+eHeAaDv7OjpAmqIrbbPgcgCoHGEeEqPbTwG5ifp+m6l
v0sHeenxBUB/tXOupS6oUzNOTQfoKg+Dh9sTuPh6EiM5H+DzvxuzQYPN+S7k
RFnjhZsrynqmMLmu/WL8QErqu5ROp9RcFRZfLleNR0AL8TJORZ40gpi6oHhP
cRBzDzaAflr7P39F3rUdGFUT4zXAUCt51zpgma5fngeay8nPBgBNxNpDA+Qb
8Rro9ATqsSrEhVjBy8sGfvGpGFjY+fSSglh8fLCKqd7XCPV9Bp/kIoyod7D7
JZMrJfW9irnaP6DUqO5cIlcNWqA2C4gKBbziyXNuv7/uhPi4MUc8jQLsg4HO
KWCNHpvee6jOJ8YTZ7eJsYd02Tj5Wn/2u+R91RpZk3UtdIqjnVl0VMYhO9EL
Hn6uSC6tx5rGAKP5g98Pz6Q5qwuoKQiDX1gg6oYXRL2VSf4qpW6qLFzlflaX
yVU9z89OV7jqmwRMnctNPSY+zryh67yBAGLvJPF0nzisI/Z2kFdtnwC0x3QO
umxmEAh2BOIrlXwCudFxLWTS72NhpBat5XEIC7JHUHwCOsdnsbazT786PS1L
TDBx34KjfawvDGKouxyFWeGIyy3E260jHJtk30CpGyzBVWJXXsEVcDVD4apf
MjB91leFZ33s0pq/izhp5wJUEF93js56WnF8Va/ECvh7Hd1noo/8qhs9P/Kw
G3ROudFxTXRKbN3DzsoouutSERHqjNDEBJS3tKN3fBIrG+vY2l7H4tteNFYk
oyA3DumFRXizsCHbl0ndfDFXB98ovVZ3di4xvkrnbSsGEiMBN1rvv1lTLief
gynyx+nxgCqP1vsGfLS50QnxdX0OqC8BIsjTLh7QOWU87nrpVNQJHB9uY3Vu
CC11echMCUQ0rUOCI4KQVpCNqoZqtPf3Y+TtHLY0RzB9GCeQkrqJ0h0r86i5
x/9lcvWUfOkC8bM0E3Agv1nYDWiIqV0VQDFxMp2YO7ul9Nb+8K1mJqaSz0Fb
Ld2/Dpin23EwTr4nr6EUtuq1mxjryEdmWgRSM5PJt3ZgelmNgyMd9AYDTCcn
os+VlNQPIeYq91TNyr1crjIstXS+KfLCxcTW2OSz3NUyoLqFLl8m7/pBdTi/
70z0fKb6gcoqul2zcrsjuuyY+2abZT7AtdKpyPfX7CxitLscWemhiIzwgio6
EHFpCSioKEXPyBgW1rewTV7VsiwRHlenFf0JTuRnpdRNFM+yGjrj6vZlcpV0
YiSPSl5zgudiFQKvy4FG+n7oLV3+kblXJrpsbw1oIKZWEVO76Hlt0fr/iHyu
mvOwDJCbyNdJZhh0u1hfHEZDRQZyClKQlR2L9PQIJCSGIC4xHFnFBajv7ETf
2BgW1StY31zD6uoClldXsb138Pf8ASmpmyDm6sjI1XDVIj4n56zqjR9f9wud
Kvx80wjEkL8dmVdyr3a2gdkhpUfsGjFWFpRfH50aRP+/2ZEGlFRVYXF9A+vr
S1ieG8Fgx2tkxLrA1e053H2d4K/yQ3wGediSbBQWZaC+exCj86vQS65K3UTx
vNTJycuvt/qnMp/1vsoIAxx8gYg4kOEBoqIBH/o5rQ5Y18h8gGsljgMYodcd
QqPVvfu4FLMEjTpodlcxQZ+T9VU5KClORU5+KgrKitAxNEEfmVpoDScyL0Dq
Zoo5yjOteT6A4Rv2PeF9Ls5XXZxRZmqPTyrzYXkGzDh9VZOXPjbKBJ1rp/N9
Bj+4nP62TCYDLVX0Ipaq0x3RVyW3Vc69lrrxEut04zeuvz9Vclv1x0ru17vj
WDmMsj+AlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSU
lJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSU1Peo/w+s5Pmq
    "], {{0, 336.}, {256.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{250.56249999999793`, Automatic},
  ImageSizeRaw->{256.5, 336.},
  PlotRange->{{0, 256.5}, {
    0, 336.}}]], \
"Input",ExpressionUUID->"b7524842-ff01-49ac-bd02-515a0772ef05"]], \
"Subsubsection",
 CellChangeTimes->{{3.9048278625828104`*^9, 3.904827881686714*^9}, {
   3.9048283466106377`*^9, 3.9048283566517534`*^9}, 3.9048283885760217`*^9, 
   3.9048287879494295`*^9},ExpressionUUID->"2a3ce3e9-1f11-4614-9202-\
34f6e8bb7d3f"],

Cell["Importando fun\[CCedilla]\[OTilde]es necess\[AAcute]rias ao \
c\[OAcute]digo:", "Text",
 CellChangeTimes->{{3.9052819283267207`*^9, 
  3.905281940954302*^9}},ExpressionUUID->"69bae758-ad39-4764-9314-\
8840f9bccc3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", " ", "@", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
 RowBox[{"<<", "Linearize.m"}]}], "Code",
 CellChangeTimes->{{3.9052819603243823`*^9, 3.9052819773389316`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9582dc03-04cd-4e67-90e2-92ecea7e2cb8"],

Cell["Coordenadas generalizadas:", "Text",
 CellChangeTimes->{{3.9048288522129016`*^9, 3.9048289716105328`*^9}, {
  3.9048298639970818`*^9, 3.904829871184148*^9}, {3.904829979193016*^9, 
  3.9048299840235143`*^9}},ExpressionUUID->"673c7760-6f78-46bd-91c8-\
cc76138e7a3e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckQ]", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", " ", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"\[DoubleStruckV]", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}], ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}], "}"}]}], "\n", 
 RowBox[{"Vo", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}]}], "Code",
 CellChangeTimes->{{3.9048297336608324`*^9, 3.904829753429878*^9}, {
   3.9048298766885457`*^9, 3.9048298773564186`*^9}, {3.9048299874731007`*^9, 
   3.904830140020424*^9}, {3.9048301981720085`*^9, 3.9048302815306444`*^9}, {
   3.9048305202698216`*^9, 3.9048305211503477`*^9}, {3.904830603551957*^9, 
   3.9048306040821905`*^9}, {3.904830648440461*^9, 3.904830693309911*^9}, {
   3.9048309096297083`*^9, 3.904830916455459*^9}, {3.9048309634349165`*^9, 
   3.904830969661507*^9}, {3.904831123544834*^9, 3.904831171636176*^9}, {
   3.904832448518764*^9, 3.904832516589164*^9}, 3.90483259718581*^9, {
   3.904832953100684*^9, 3.904832965186798*^9}, {3.9048332323801875`*^9, 
   3.9048332410989695`*^9}, {3.9048333453903255`*^9, 3.904833348075153*^9}, {
   3.9048338823821697`*^9, 3.9048338980500145`*^9}, {3.904833946137988*^9, 
   3.9048339758246126`*^9}, {3.90483426563673*^9, 3.9048342987638755`*^9}, {
   3.9048344158542337`*^9, 3.904834416756692*^9}, {3.904834506566902*^9, 
   3.904834506856451*^9}, 3.904834545449642*^9, 3.9048346949687757`*^9, {
   3.9048347952994595`*^9, 3.9048348284534817`*^9}, {3.9048349350369244`*^9, 
   3.904834995561153*^9}, {3.9048350335503197`*^9, 3.9048350343090734`*^9}, {
   3.9048351305818343`*^9, 3.90483516323726*^9}, {3.904835707502683*^9, 
   3.9048357079809837`*^9}, {3.9048362414174595`*^9, 3.904836254355673*^9}, {
   3.904842347087528*^9, 3.9048423487445345`*^9}, {3.904843729095508*^9, 
   3.9048437675818663`*^9}, {3.904845547881866*^9, 3.904845553207277*^9}, {
   3.9048485130679913`*^9, 3.904848525681281*^9}, {3.904850262789755*^9, 
   3.9048502735012484`*^9}, {3.9048915800328665`*^9, 
   3.9048917008829784`*^9}, {3.904891815774398*^9, 3.904891873635505*^9}, {
   3.90489195129213*^9, 3.904891974952219*^9}, {3.9048925401416483`*^9, 
   3.904892540577304*^9}, {3.9048926054117365`*^9, 3.904892649645563*^9}, {
   3.9048927906287456`*^9, 3.904892805578244*^9}, {3.9048971470996733`*^9, 
   3.904897159894394*^9}, {3.9053199606667867`*^9, 3.905319968618825*^9}, {
   3.9053200505090637`*^9, 3.90532005631641*^9}, 3.905625039148532*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"6232ef19-75e5-47d4-b5af-0c6cc268c42b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.904830659650753*^9, 3.9048306670748014`*^9}, 
   3.904830971747364*^9, {3.9048311418041525`*^9, 3.904831184961012*^9}, {
   3.90483249251239*^9, 3.904832518309124*^9}, 3.9048325992793827`*^9, {
   3.9048329613512297`*^9, 3.9048329665379367`*^9}, 3.904833242827964*^9, 
   3.90483335415038*^9, 3.904833899782379*^9, 3.904833947601316*^9, {
   3.904834282680626*^9, 3.904834299736814*^9}, 3.904834507690083*^9, 
   3.9048345473712873`*^9, 3.904834695944853*^9, {3.9048347963791637`*^9, 
   3.90483480270273*^9}, {3.9048349559816265`*^9, 3.904834996669551*^9}, 
   3.904835035320245*^9, {3.904835127191594*^9, 3.9048351642894487`*^9}, 
   3.904835709107255*^9, {3.9048362457056313`*^9, 3.9048362553607855`*^9}, {
   3.9048436048705235`*^9, 3.904843605849222*^9}, {3.9048437496559687`*^9, 
   3.904843768558406*^9}, 3.90484555386508*^9, 3.9048485263661833`*^9, 
   3.9048502792822027`*^9, {3.9048865015837092`*^9, 3.9048865065712724`*^9}, {
   3.90488960252452*^9, 3.904889606277563*^9}, {3.904891565013815*^9, 
   3.904891568413001*^9}, {3.904891634513954*^9, 3.904891669517372*^9}, {
   3.904891849286311*^9, 3.904891874416911*^9}, {3.9048919717775154`*^9, 
   3.904891975595136*^9}, {3.90489254177809*^9, 3.904892558647807*^9}, {
   3.904892625472072*^9, 3.9048926502868223`*^9}, 3.9048927051611595`*^9, {
   3.9048927980633807`*^9, 3.904892806141062*^9}, {3.904897163841871*^9, 
   3.904897166389846*^9}, {3.905280122613407*^9, 3.9052801294302363`*^9}, {
   3.905287053654767*^9, 3.9052870654953628`*^9}, {3.9052878176724567`*^9, 
   3.905287826449231*^9}, {3.905318354055539*^9, 3.9053183635099616`*^9}, 
   3.905319974339336*^9, 3.905320059596882*^9, {3.9053324044820013`*^9, 
   3.905332412612198*^9}, {3.905505919459239*^9, 3.905505925132588*^9}, {
   3.9056208543536835`*^9, 3.9056208575961485`*^9}, 3.9056250422557592`*^9, 
   3.9056921554307103`*^9, {3.9059545817805967`*^9, 3.9059545890743637`*^9}, {
   3.9061068627149143`*^9, 3.9061068662081995`*^9}, 3.9061071291441417`*^9, 
   3.906107460480101*^9, 3.906120682684518*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c3e0d3b7-69bd-4e83-a130-44041b291f9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.904830659650753*^9, 3.9048306670748014`*^9}, 
   3.904830971747364*^9, {3.9048311418041525`*^9, 3.904831184961012*^9}, {
   3.90483249251239*^9, 3.904832518309124*^9}, 3.9048325992793827`*^9, {
   3.9048329613512297`*^9, 3.9048329665379367`*^9}, 3.904833242827964*^9, 
   3.90483335415038*^9, 3.904833899782379*^9, 3.904833947601316*^9, {
   3.904834282680626*^9, 3.904834299736814*^9}, 3.904834507690083*^9, 
   3.9048345473712873`*^9, 3.904834695944853*^9, {3.9048347963791637`*^9, 
   3.90483480270273*^9}, {3.9048349559816265`*^9, 3.904834996669551*^9}, 
   3.904835035320245*^9, {3.904835127191594*^9, 3.9048351642894487`*^9}, 
   3.904835709107255*^9, {3.9048362457056313`*^9, 3.9048362553607855`*^9}, {
   3.9048436048705235`*^9, 3.904843605849222*^9}, {3.9048437496559687`*^9, 
   3.904843768558406*^9}, 3.90484555386508*^9, 3.9048485263661833`*^9, 
   3.9048502792822027`*^9, {3.9048865015837092`*^9, 3.9048865065712724`*^9}, {
   3.90488960252452*^9, 3.904889606277563*^9}, {3.904891565013815*^9, 
   3.904891568413001*^9}, {3.904891634513954*^9, 3.904891669517372*^9}, {
   3.904891849286311*^9, 3.904891874416911*^9}, {3.9048919717775154`*^9, 
   3.904891975595136*^9}, {3.90489254177809*^9, 3.904892558647807*^9}, {
   3.904892625472072*^9, 3.9048926502868223`*^9}, 3.9048927051611595`*^9, {
   3.9048927980633807`*^9, 3.904892806141062*^9}, {3.904897163841871*^9, 
   3.904897166389846*^9}, {3.905280122613407*^9, 3.9052801294302363`*^9}, {
   3.905287053654767*^9, 3.9052870654953628`*^9}, {3.9052878176724567`*^9, 
   3.905287826449231*^9}, {3.905318354055539*^9, 3.9053183635099616`*^9}, 
   3.905319974339336*^9, 3.905320059596882*^9, {3.9053324044820013`*^9, 
   3.905332412612198*^9}, {3.905505919459239*^9, 3.905505925132588*^9}, {
   3.9056208543536835`*^9, 3.9056208575961485`*^9}, 3.9056250422557592`*^9, 
   3.9056921554307103`*^9, {3.9059545817805967`*^9, 3.9059545890743637`*^9}, {
   3.9061068627149143`*^9, 3.9061068662081995`*^9}, 3.9061071291441417`*^9, 
   3.906107460480101*^9, 3.906120682693533*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"88fa5368-8bcf-4afb-adfe-2db8feb9a7a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.904830659650753*^9, 3.9048306670748014`*^9}, 
   3.904830971747364*^9, {3.9048311418041525`*^9, 3.904831184961012*^9}, {
   3.90483249251239*^9, 3.904832518309124*^9}, 3.9048325992793827`*^9, {
   3.9048329613512297`*^9, 3.9048329665379367`*^9}, 3.904833242827964*^9, 
   3.90483335415038*^9, 3.904833899782379*^9, 3.904833947601316*^9, {
   3.904834282680626*^9, 3.904834299736814*^9}, 3.904834507690083*^9, 
   3.9048345473712873`*^9, 3.904834695944853*^9, {3.9048347963791637`*^9, 
   3.90483480270273*^9}, {3.9048349559816265`*^9, 3.904834996669551*^9}, 
   3.904835035320245*^9, {3.904835127191594*^9, 3.9048351642894487`*^9}, 
   3.904835709107255*^9, {3.9048362457056313`*^9, 3.9048362553607855`*^9}, {
   3.9048436048705235`*^9, 3.904843605849222*^9}, {3.9048437496559687`*^9, 
   3.904843768558406*^9}, 3.90484555386508*^9, 3.9048485263661833`*^9, 
   3.9048502792822027`*^9, {3.9048865015837092`*^9, 3.9048865065712724`*^9}, {
   3.90488960252452*^9, 3.904889606277563*^9}, {3.904891565013815*^9, 
   3.904891568413001*^9}, {3.904891634513954*^9, 3.904891669517372*^9}, {
   3.904891849286311*^9, 3.904891874416911*^9}, {3.9048919717775154`*^9, 
   3.904891975595136*^9}, {3.90489254177809*^9, 3.904892558647807*^9}, {
   3.904892625472072*^9, 3.9048926502868223`*^9}, 3.9048927051611595`*^9, {
   3.9048927980633807`*^9, 3.904892806141062*^9}, {3.904897163841871*^9, 
   3.904897166389846*^9}, {3.905280122613407*^9, 3.9052801294302363`*^9}, {
   3.905287053654767*^9, 3.9052870654953628`*^9}, {3.9052878176724567`*^9, 
   3.905287826449231*^9}, {3.905318354055539*^9, 3.9053183635099616`*^9}, 
   3.905319974339336*^9, 3.905320059596882*^9, {3.9053324044820013`*^9, 
   3.905332412612198*^9}, {3.905505919459239*^9, 3.905505925132588*^9}, {
   3.9056208543536835`*^9, 3.9056208575961485`*^9}, 3.9056250422557592`*^9, 
   3.9056921554307103`*^9, {3.9059545817805967`*^9, 3.9059545890743637`*^9}, {
   3.9061068627149143`*^9, 3.9061068662081995`*^9}, 3.9061071291441417`*^9, 
   3.906107460480101*^9, 3.9061206827018223`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"998125d6-ad0d-4dd9-8e23-78f75ac58ce4"]
}, Open  ]],

Cell["\<\
Vetores posi\[CCedilla]\[ATilde]o necess\[AAcute]rios para a \
aplica\[CCedilla]\[ATilde]o do campo de velocidades e TEC\
\>", "Text",
 CellChangeTimes->{{3.905324468970657*^9, 
  3.9053244843870316`*^9}},ExpressionUUID->"97ea9174-8f3b-42a8-b40e-\
4eef1b813b6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "PO"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "1"], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["l", "1"]}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "0"}], "}"}]}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Vetor", " ", "P"}], "-", "O"}], "*)"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Rho]", "QP"], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "2"], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["l", "2"]}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckQ]", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", " ", "0"}], "}"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Vetor", " ", "Q"}], "-", "P"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.9048317029645133`*^9, 3.904831763093176*^9}, {
   3.904831872181159*^9, 3.90483194640206*^9}, {3.9048320980134754`*^9, 
   3.9048321189064064`*^9}, {3.904832618866861*^9, 3.9048326881664205`*^9}, {
   3.9048329881957912`*^9, 3.904833059119521*^9}, {3.904833090483639*^9, 
   3.9048331124195986`*^9}, {3.9048332207756*^9, 3.9048332293043633`*^9}, {
   3.9048333565357847`*^9, 3.904833361227777*^9}, {3.904833909781522*^9, 
   3.9048339209081483`*^9}, {3.9048354231398773`*^9, 
   3.9048354987881956`*^9}, {3.9048356685666623`*^9, 3.904835672362156*^9}, {
   3.9048436440038614`*^9, 3.9048436493055267`*^9}, 3.9048459654304433`*^9, {
   3.9048473651272297`*^9, 3.904847369507944*^9}, {3.904847736732703*^9, 
   3.9048477428327894`*^9}, {3.9048515018969603`*^9, 3.9048515070476933`*^9}, 
   3.9048896098822317`*^9, 3.9048917211032104`*^9, {3.904892132029377*^9, 
   3.9048921861686177`*^9}, 3.9048971687677345`*^9, {3.905320108780846*^9, 
   3.9053201108373814`*^9}, {3.905324485938693*^9, 3.905324508233401*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f8478010-9a8e-4a59-a6c5-9fdc3c3d115f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
    SubscriptBox["l", "1"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], " ", 
    SubscriptBox["l", "1"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9048319481033044`*^9, {3.9048321040804358`*^9, 3.904832121736662*^9}, 
   3.9048326918109446`*^9, 3.9048330618914137`*^9, 3.9048331146859436`*^9, 
   3.9048332449448547`*^9, 3.904833361708152*^9, 3.904833923115312*^9, 
   3.90483434469308*^9, 3.904834817921906*^9, 3.9048349997355876`*^9, 
   3.9048355002666044`*^9, 3.9048356858822727`*^9, 3.9048436055497255`*^9, 
   3.904843653162287*^9, 3.9048455556843195`*^9, 3.9048459664087744`*^9, 
   3.9048473701413555`*^9, 3.904847745685357*^9, 3.904848528535571*^9, 
   3.904850281710783*^9, 3.9048515045769987`*^9, {3.904886501835821*^9, 
   3.904886506621871*^9}, {3.9048896027818313`*^9, 3.904889610314885*^9}, {
   3.904891565136342*^9, 3.9048915684514236`*^9}, 3.904891982196646*^9, {
   3.904892169644876*^9, 3.9048921882119884`*^9}, 3.9048925587430625`*^9, 
   3.904892654875744*^9, 3.9048927077581916`*^9, {3.90489716407705*^9, 
   3.9048971714036713`*^9}, {3.905280122830387*^9, 3.9052801294754505`*^9}, {
   3.905287053725026*^9, 3.9052870655799303`*^9}, {3.9052878179089456`*^9, 
   3.905287826512003*^9}, {3.90531835418622*^9, 3.905318363597814*^9}, 
   3.905319974469467*^9, 3.9053200597440424`*^9, {3.905332404566976*^9, 
   3.905332412668456*^9}, {3.90550591956231*^9, 3.90550592522046*^9}, {
   3.9056208544170127`*^9, 3.9056208576453757`*^9}, 3.905625045623664*^9, 
   3.9056921555883865`*^9, {3.905954581830735*^9, 3.9059545891250877`*^9}, {
   3.9061068628184934`*^9, 3.906106866286649*^9}, 3.9061071292017007`*^9, 
   3.9061074605365496`*^9, 3.9061206827432623`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ca2c0897-11cb-4661-947f-b796e16620d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
    SubscriptBox["l", "2"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], " ", 
    SubscriptBox["l", "2"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9048319481033044`*^9, {3.9048321040804358`*^9, 3.904832121736662*^9}, 
   3.9048326918109446`*^9, 3.9048330618914137`*^9, 3.9048331146859436`*^9, 
   3.9048332449448547`*^9, 3.904833361708152*^9, 3.904833923115312*^9, 
   3.90483434469308*^9, 3.904834817921906*^9, 3.9048349997355876`*^9, 
   3.9048355002666044`*^9, 3.9048356858822727`*^9, 3.9048436055497255`*^9, 
   3.904843653162287*^9, 3.9048455556843195`*^9, 3.9048459664087744`*^9, 
   3.9048473701413555`*^9, 3.904847745685357*^9, 3.904848528535571*^9, 
   3.904850281710783*^9, 3.9048515045769987`*^9, {3.904886501835821*^9, 
   3.904886506621871*^9}, {3.9048896027818313`*^9, 3.904889610314885*^9}, {
   3.904891565136342*^9, 3.9048915684514236`*^9}, 3.904891982196646*^9, {
   3.904892169644876*^9, 3.9048921882119884`*^9}, 3.9048925587430625`*^9, 
   3.904892654875744*^9, 3.9048927077581916`*^9, {3.90489716407705*^9, 
   3.9048971714036713`*^9}, {3.905280122830387*^9, 3.9052801294754505`*^9}, {
   3.905287053725026*^9, 3.9052870655799303`*^9}, {3.9052878179089456`*^9, 
   3.905287826512003*^9}, {3.90531835418622*^9, 3.905318363597814*^9}, 
   3.905319974469467*^9, 3.9053200597440424`*^9, {3.905332404566976*^9, 
   3.905332412668456*^9}, {3.90550591956231*^9, 3.90550592522046*^9}, {
   3.9056208544170127`*^9, 3.9056208576453757`*^9}, 3.905625045623664*^9, 
   3.9056921555883865`*^9, {3.905954581830735*^9, 3.9059545891250877`*^9}, {
   3.9061068628184934`*^9, 3.906106866286649*^9}, 3.9061071292017007`*^9, 
   3.9061074605365496`*^9, 3.906120682752234*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"42082315-0554-4727-ab38-27d5692e2dd2"]
}, Open  ]],

Cell["\<\
Definindo os vetores rota\[CCedilla]\[ATilde]o e as velocidades dos centros \
de massa e polos de interesse \
\>", "Text",
 CellChangeTimes->{{3.904830298920784*^9, 3.904830310712357*^9}, 
   3.9048316810022674`*^9, {3.9049011255300055`*^9, 3.904901149332521*^9}, 
   3.9053245600216055`*^9, {3.9053248429059334`*^9, 
   3.9053248465627737`*^9}},ExpressionUUID->"11a4e1b4-94be-4164-8a54-\
980c9abcbec8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {}, 
      "input" -> "\\omega_1", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       RowBox[{"\[DoubleStruckV]", "[", "t", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox["\[Omega]", "2"], TraditionalForm], "errors" -> {}, 
      "input" -> "\\omega_2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       RowBox[{"\[DoubleStruckV]", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Note", " ", "que", " ", "o", " ", "vetor", " ", "de", " ", 
       "rota\[CCedilla]\[ATilde]o", " ", "da", " ", "barra", " ", "2", " ", 
       "\[EAcute]", " ", "a", " ", "composi\[CCedilla]\[ATilde]o", " ", "das",
        " ", "derivadas", " ", "das", " ", "coordenadas", "\n", 
       "generalizadas", " ", "por", " ", "se", " ", "tratar", " ", "de", " ", 
       "um", " ", "vetor", " ", "sem", " ", "ponto", " ", "de", " ", 
       "aplica\[CCedilla]\[ATilde]o", " ", "que", " ", "\[EAcute]", " ", "o", 
       " ", "mesmo", " ", "para", " ", "todos", " ", "os", " ", "pontos", " ",
        "do", " ", "corpo", " ", "e"}], ",", " ", "assim", ",", "\n", 
      RowBox[{"deve", "-", 
       RowBox[{"se", " ", "levar", " ", "em", " ", "conta", " ", "o", " ", 
        RowBox[{"arrastamento", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "p\[AAcute]gina", " ", "106", " ", "das", " ", "notas", " ", "de", 
            " ", "aula", " ", "completas"}], "-", " ", 
           RowBox[{
           "CINEM\[CapitalAAcute]TICA", " ", 
            "COMPOSI\[CapitalCCedilla]\[CapitalATilde]O", " ", "DE", " ", 
            "MOVIMENTOS", " ", "\n", "Edilson", " ", "Tamai"}]}], ",", " ", 
          "2021"}]}]}]}]}], ")"}], "]"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "p"], " ", "=", " ", 
   RowBox[{"Vo", " ", "+", " ", 
    RowBox[{"Cross", "[", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {}, 
        "input" -> "\\omega_1", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], ",", " ", 
      SubscriptBox["\[Rho]", "PO"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", 
    RowBox[{"G1", " "}]], "=", " ", 
   RowBox[{"Vo", " ", "+", " ", 
    RowBox[{"Cross", "[", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {}, 
        "input" -> "\\omega_1", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], " ", ",", " ", 
      RowBox[{
       SubscriptBox["\[Rho]", "PO"], "/", "2"}]}], "]"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Como", " ", "\[EAcute]", " ", "um", " ", "corpo", " ", "r\[IAcute]gido", 
     " ", "uniforme", " ", "unidimensional", " ", 
     RowBox[{"(", 
      RowBox[{"apenas", " ", "comprimento"}], ")"}]}], ",", " ", 
    RowBox[{
    "o", " ", "centro", " ", "de", " ", "massa", " ", "est\[AAcute]", "\n", 
     "na", " ", "metade", " ", "da", " ", "barra"}], ",", " ", 
    RowBox[{"ou", " ", "seja"}], ",", " ", 
    RowBox[{
     RowBox[{"o", " ", "vetor", " ", "G"}], "-", 
     RowBox[{"O", " ", "\[EAcute]", " ", "metade", " ", "do", " ", "P"}], "-",
      "O"}]}], "*)"}]}], "\n", 
 RowBox[{
  SubscriptBox["V", "G2"], " ", "=", " ", 
  RowBox[{
   SubscriptBox["V", "p"], " ", "+", " ", 
   RowBox[{"Cross", "[", 
    RowBox[{
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox["\[Omega]", "2"], TraditionalForm], "errors" -> {}, 
       "input" -> "\\omega_2", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], " ", ",", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", "QP"], "/", "2"}]}], "]"}], " "}]}]}], "Code",
 CellChangeTimes->{{3.904831212980961*^9, 3.9048312942408276`*^9}, {
   3.90483138372614*^9, 3.9048314130135093`*^9}, {3.904831471486681*^9, 
   3.9048315380333323`*^9}, {3.9048316197547436`*^9, 3.904831671700653*^9}, {
   3.904832427940735*^9, 3.90483243693046*^9}, {3.9048331910265684`*^9, 
   3.904833203403244*^9}, 3.904833257548041*^9, {3.9048334047372046`*^9, 
   3.9048334601220484`*^9}, {3.9048334921076937`*^9, 
   3.9048334997715807`*^9}, {3.904833956493439*^9, 3.9048339808876963`*^9}, {
   3.9048341182420607`*^9, 3.904834167686735*^9}, {3.9048342429442225`*^9, 
   3.9048342567266116`*^9}, {3.9048342868953576`*^9, 3.904834287424898*^9}, {
   3.904834360375501*^9, 3.9048343646334105`*^9}, {3.9048344321170883`*^9, 
   3.9048344923455544`*^9}, 3.9048350504972935`*^9, {3.9048350990722723`*^9, 
   3.904835115932459*^9}, {3.9048351709587836`*^9, 3.904835227829915*^9}, {
   3.9048355152185683`*^9, 3.9048355284681096`*^9}, {3.904835564661668*^9, 
   3.904835586078882*^9}, {3.9048356750787106`*^9, 3.904835678475085*^9}, {
   3.904843817793565*^9, 3.9048438242784967`*^9}, 3.904843908532569*^9, {
   3.904844042035286*^9, 3.904844109944293*^9}, {3.9048446539657917`*^9, 
   3.904844654789447*^9}, {3.9048459140827026`*^9, 3.9048459152879143`*^9}, 
   3.904845964728257*^9, 3.9048478994918966`*^9, {3.9048502921538563`*^9, 
   3.904850293523487*^9}, {3.904851191808481*^9, 3.9048512015465407`*^9}, {
   3.9048512324561787`*^9, 3.9048512388516088`*^9}, {3.9048514347999268`*^9, 
   3.90485152866617*^9}, {3.9048517246472034`*^9, 3.9048517517463408`*^9}, {
   3.9048533800628386`*^9, 3.9048533978849134`*^9}, {3.9048917556271753`*^9, 
   3.9048917828844767`*^9}, {3.904891990786517*^9, 3.904892026838849*^9}, {
   3.9048920583783474`*^9, 3.904892083597094*^9}, {3.9048922018097897`*^9, 
   3.904892212637048*^9}, {3.9048976135682745`*^9, 3.904897615350533*^9}, {
   3.9049011511106524`*^9, 3.9049012099854894`*^9}, {3.905280377806237*^9, 
   3.9052803992554855`*^9}, {3.905280434582633*^9, 3.9052804348183503`*^9}, {
   3.90528047968122*^9, 3.9052805008858376`*^9}, {3.9052806084417953`*^9, 
   3.9052806107581825`*^9}, {3.905280644227187*^9, 3.905280645323114*^9}, {
   3.905320581098096*^9, 3.9053205961764507`*^9}, {3.9053245631382523`*^9, 
   3.905324656848812*^9}, {3.9053247106869855`*^9, 3.9053248391024294`*^9}, 
   3.9055059016248245`*^9, {3.905505947441365*^9, 3.9055059522307034`*^9}, {
   3.905625033612325*^9, 3.9056250336173115`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4235b9db-736c-4ca5-abaf-2a204c60e728"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
    SubscriptBox["l", "1"], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
    SubscriptBox["l", "1"], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.904886501879453*^9, 3.9048865066610565`*^9}, {
   3.904889602815029*^9, 3.904889612627183*^9}, {3.904891565181369*^9, 
   3.904891568489976*^9}, 3.904892083923472*^9, 3.9048922135555997`*^9, 
   3.9048925587869015`*^9, 3.9048926571632814`*^9, 3.9048927097502947`*^9, {
   3.90489716411823*^9, 3.9048971794835854`*^9}, 3.9048976162951393`*^9, {
   3.9049011835700717`*^9, 3.904901212429699*^9}, {3.905280123008169*^9, 
   3.9052801295193653`*^9}, 3.9052804019482403`*^9, 3.9052804359657125`*^9, {
   3.9052804817886567`*^9, 3.9052805018538322`*^9}, {3.905280626354643*^9, 
   3.9052806476342545`*^9}, {3.9052870537888675`*^9, 3.905287065649313*^9}, {
   3.905287818093633*^9, 3.9052878265640397`*^9}, {3.9053183543016915`*^9, 
   3.9053183636644197`*^9}, 3.9053199745918436`*^9, 3.90532005985926*^9, {
   3.905320583128686*^9, 3.9053206052157745`*^9}, 3.9053248394874153`*^9, {
   3.905332404973589*^9, 3.905332412713832*^9}, {3.9055059196239915`*^9, 
   3.90550593123345*^9}, 3.9055059793816657`*^9, {3.905620854467393*^9, 
   3.9056208576860046`*^9}, 3.9056250509922748`*^9, 3.9056921557233763`*^9, {
   3.905954581871626*^9, 3.905954589162697*^9}, {3.9061068629038076`*^9, 
   3.9061068663459063`*^9}, 3.906107129258201*^9, 3.906107460586399*^9, 
   3.906120682799124*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3d52ea13-226f-48d9-a291-f80b3c203726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "1"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "1"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "2"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "2"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "1"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "1"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "2"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "2"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.904886501879453*^9, 3.9048865066610565`*^9}, {
   3.904889602815029*^9, 3.904889612627183*^9}, {3.904891565181369*^9, 
   3.904891568489976*^9}, 3.904892083923472*^9, 3.9048922135555997`*^9, 
   3.9048925587869015`*^9, 3.9048926571632814`*^9, 3.9048927097502947`*^9, {
   3.90489716411823*^9, 3.9048971794835854`*^9}, 3.9048976162951393`*^9, {
   3.9049011835700717`*^9, 3.904901212429699*^9}, {3.905280123008169*^9, 
   3.9052801295193653`*^9}, 3.9052804019482403`*^9, 3.9052804359657125`*^9, {
   3.9052804817886567`*^9, 3.9052805018538322`*^9}, {3.905280626354643*^9, 
   3.9052806476342545`*^9}, {3.9052870537888675`*^9, 3.905287065649313*^9}, {
   3.905287818093633*^9, 3.9052878265640397`*^9}, {3.9053183543016915`*^9, 
   3.9053183636644197`*^9}, 3.9053199745918436`*^9, 3.90532005985926*^9, {
   3.905320583128686*^9, 3.9053206052157745`*^9}, 3.9053248394874153`*^9, {
   3.905332404973589*^9, 3.905332412713832*^9}, {3.9055059196239915`*^9, 
   3.90550593123345*^9}, 3.9055059793816657`*^9, {3.905620854467393*^9, 
   3.9056208576860046`*^9}, 3.9056250509922748`*^9, 3.9056921557233763`*^9, {
   3.905954581871626*^9, 3.905954589162697*^9}, {3.9061068629038076`*^9, 
   3.9061068663459063`*^9}, 3.906107129258201*^9, 3.906107460586399*^9, 
   3.906120682808858*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ad7505a6-c1bf-48c5-a7c9-8cb5e11b7e0e"]
}, Open  ]],

Cell["A energia cin\[EAcute]tica das barras \[EAcute] ent\[ATilde]o \
calculada:", "Text",
 CellChangeTimes->{{3.9048360419145756`*^9, 3.904836049881323*^9}, 
   3.9048362017846117`*^9, {3.9053248514381623`*^9, 
   3.9053248605042086`*^9}},ExpressionUUID->"842643c8-bd35-49fe-80d4-\
fb567fb30d39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Utilizou", "-", 
       RowBox[{
       "se", " ", "v\[AAcute]rios", " ", "polos", " ", "apenas", " ", "para", 
        " ", "confirmar", " ", "se", " ", "o", " ", "resultado", " ", "era", 
        " ", "o", " ", "mesmo", " ", "e"}]}], ",", " ", "assim", ",", " ", 
      RowBox[{
      "verificar", " ", "se", " ", "os", " ", "c\[AAcute]lculos", " ", 
       "anteriores", " ", "\n", "est\[ATilde]o", " ", 
       RowBox[{"corretos", ".", " ", "A"}], " ", "f\[OAcute]rmula", " ", 
       "utilizada", " ", "\[EAcute]", " ", "o", " ", "Teorema", " ", "da", 
       " ", "Energia", " ", "Cin\[EAcute]tica", " ", "de", " ", "um", " ", 
       "Copo", " ", "R\[IAcute]gido"}], ",", " ", 
      RowBox[{
       RowBox[{
       "p\[AAcute]gina", " ", "183", " ", "das", " ", "notas", " ", "de", " ",
         "aula", " ", "completas"}], "-", " ", 
       RowBox[{
       "CINEM\[CapitalAAcute]TICA", " ", 
        "COMPOSI\[CapitalCCedilla]\[CapitalATilde]O", " ", "DE", " ", 
        "MOVIMENTOS", " ", "\n", "Edilson", " ", "Tamai"}]}], ",", " ", 
      "2021"}], ")"}], "]"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"T1", " ", "=", " ", 
     RowBox[{
      FractionBox["1", "2"], "m1", "*", 
      RowBox[{"1", "/", "3"}], "*", 
      RowBox[{
       SubscriptBox["l", "1"], "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[<|"boxes" -> FormBox[
            SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {}, 
          "input" -> "\\omega_1", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"], ".", 
        TemplateBox[<|"boxes" -> FormBox[
            SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {}, 
          "input" -> "\\omega_1", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"utilizando", " ", "O", " ", "como", " ", "polo"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["T1", "G"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m1", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "G1"], ".", 
          SubscriptBox["V", "G1"]}], ")"}]}], " ", "+", " ", 
       RowBox[{
        FractionBox["1", "2"], "m1", "*", 
        RowBox[{"1", "/", "12"}], "*", 
        RowBox[{
         SubscriptBox["l", "1"], "^", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[<|"boxes" -> FormBox[
              SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {},
             "input" -> "\\omega_1", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"], ".", 
          TemplateBox[<|"boxes" -> FormBox[
              SubscriptBox["\[Omega]", "1"], TraditionalForm], "errors" -> {},
             "input" -> "\\omega_1", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"]}], ")"}]}]}]}], ";"}], " ", "//", 
    "FullSimplify"}], 
   RowBox[{"(*", 
    RowBox[{"utilizando", " ", "G1", " ", "como", " ", "polo"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["T1", "P"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m1", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "p"], ".", 
          SubscriptBox["V", "p"]}], ")"}]}], " ", "+", " ", 
       RowBox[{"m1", "*", 
        RowBox[{
         SubscriptBox["V", "p"], ".", 
         RowBox[{"Cross", "[", 
          RowBox[{
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "1"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_1", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], ",", " ", 
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["\[Rho]", "PO"]}], "/", "2"}]}], "]"}]}]}], "+", 
       " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "m1", "*", 
         RowBox[{"1", "/", "3"}], "*", 
         RowBox[{
          SubscriptBox["l", "1"], "^", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "1"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_1", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], ".", 
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "1"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_1", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"]}], ")"}]}], ")"}]}]}], ";"}], " ", "//", 
    "FullSimplify"}], " ", 
   RowBox[{"(*", 
    RowBox[{"utilizando", " ", "P", " ", "como", " ", "polo"}], "*)"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"T2", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m2", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "G2"], ".", 
          SubscriptBox["V", "G2"]}], ")"}]}], " ", "+", " ", 
       RowBox[{
        FractionBox["1", "2"], "m2", "*", 
        RowBox[{"1", "/", "12"}], "*", 
        RowBox[{
         SubscriptBox["l", "2"], "^", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[<|"boxes" -> FormBox[
              SubscriptBox["\[Omega]", "2"], TraditionalForm], "errors" -> {},
             "input" -> "\\omega_2", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"], ".", 
          TemplateBox[<|"boxes" -> FormBox[
              SubscriptBox["\[Omega]", "2"], TraditionalForm], "errors" -> {},
             "input" -> "\\omega_2", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"]}], ")"}]}]}], " ", "//", 
      "FullSimplify"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"utilizando", " ", "G2", " ", "como", " ", "polo"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     SubscriptBox["T2", "P"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m2", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "p"], ".", 
          SubscriptBox["V", "p"]}], ")"}]}], " ", "+", " ", 
       RowBox[{"m2", "*", 
        RowBox[{
         SubscriptBox["V", "p"], ".", 
         RowBox[{"Cross", "[", 
          RowBox[{
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "2"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_2", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], ",", " ", 
           RowBox[{
            SubscriptBox["\[Rho]", "QP"], "/", "2"}]}], "]"}]}]}], "+", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "m2", "*", 
         RowBox[{"1", "/", "3"}], "*", 
         RowBox[{
          SubscriptBox["l", "2"], "^", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "2"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_2", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], ".", 
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox["\[Omega]", "2"], TraditionalForm], 
             "errors" -> {}, "input" -> "\\omega_2", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"]}], ")"}]}], ")"}]}], " ", "//", 
      "FullSimplify"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"utilizando", " ", "P", " ", "como", " ", "polo"}], "*)"}], "\n", 
   "\n", 
   RowBox[{"T", " ", "=", " ", 
    RowBox[{
     RowBox[{"T1", "+", "T2"}], " ", "//", " ", "FullSimplify"}]}], 
   RowBox[{"(*", 
    RowBox[{
    "energia", " ", "cin\[EAcute]tica", " ", "total", " ", "do", " ", 
     "sistema"}], "*)"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.9048362044791255`*^9, 3.9048362258159237`*^9}, {
   3.9048362949428034`*^9, 3.9048363463108788`*^9}, {3.9048441191338577`*^9, 
   3.904844322495332*^9}, {3.9048443569542904`*^9, 3.9048444096650667`*^9}, {
   3.9048445384836683`*^9, 3.904844540354513*^9}, {3.90484457359321*^9, 
   3.9048445745614743`*^9}, {3.9048446343953915`*^9, 3.904844636732464*^9}, {
   3.904844681247009*^9, 3.904844697591958*^9}, {3.904844859162378*^9, 
   3.904844902963013*^9}, {3.904844939007148*^9, 3.9048449472572412`*^9}, {
   3.904845374813981*^9, 3.9048453775935135`*^9}, {3.904845500769953*^9, 
   3.904845519134554*^9}, {3.9048460030119534`*^9, 3.904846006528621*^9}, {
   3.904846080644129*^9, 3.9048460993394136`*^9}, 3.9048461614523335`*^9, {
   3.9048463232492423`*^9, 3.904846378683144*^9}, {3.904846550562962*^9, 
   3.9048467420263634`*^9}, {3.9048469361028776`*^9, 3.9048470050929*^9}, {
   3.904847207674035*^9, 3.904847209813141*^9}, {3.904847240184352*^9, 
   3.904847241121264*^9}, {3.9048473575908546`*^9, 3.9048473584924216`*^9}, {
   3.904847518216069*^9, 3.904847523044848*^9}, {3.904847588455321*^9, 
   3.90484759690841*^9}, {3.9048476321851597`*^9, 3.9048476648492064`*^9}, {
   3.904847834114629*^9, 3.9048478758683014`*^9}, 3.904847917078971*^9, {
   3.9048479494011145`*^9, 3.9048479516759143`*^9}, {3.904848011882284*^9, 
   3.904848018513613*^9}, 3.904848495448948*^9, {3.9048485454387417`*^9, 
   3.9048486127683773`*^9}, {3.904848673356885*^9, 3.904848673678342*^9}, {
   3.9048488166852593`*^9, 3.904848930451441*^9}, {3.9048491077779827`*^9, 
   3.904849139105257*^9}, {3.904850070506171*^9, 3.9048501056352835`*^9}, 
   3.9048504916347036`*^9, {3.90485066770476*^9, 3.9048506767800655`*^9}, {
   3.9048508113668246`*^9, 3.9048508197453938`*^9}, 3.9048510739067283`*^9, 
   3.9048511149253473`*^9, {3.9048512042696266`*^9, 3.904851219428429*^9}, 
   3.9048513086390667`*^9, {3.90485136415696*^9, 3.9048513649143953`*^9}, {
   3.9048515339207497`*^9, 3.9048516308899984`*^9}, 3.9048516675800543`*^9, {
   3.9048518254248066`*^9, 3.904851848101078*^9}, {3.9048539149814615`*^9, 
   3.9048539877451177`*^9}, {3.904887561113953*^9, 3.9048875745344553`*^9}, {
   3.904892299422538*^9, 3.904892380286161*^9}, {3.9048924625413847`*^9, 
   3.9048925236577463`*^9}, 3.904892579311059*^9, {3.9048971884765825`*^9, 
   3.904897231543275*^9}, {3.9048975495083685`*^9, 3.904897583918989*^9}, {
   3.9048976448348446`*^9, 3.9048976814067354`*^9}, {3.9049012178910203`*^9, 
   3.9049012540118713`*^9}, {3.9049012962330027`*^9, 3.904901305780938*^9}, {
   3.9049013683468685`*^9, 3.904901372958116*^9}, 3.9049014145991297`*^9, {
   3.905320778772375*^9, 3.9053208098406167`*^9}, {3.9053208827622886`*^9, 
   3.905320894377432*^9}, {3.9053209464450088`*^9, 3.9053210034618225`*^9}, {
   3.9053248920580955`*^9, 3.905324998717517*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"51cdcca6-be4f-42e2-90a3-6f7c12cf6552"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m1", "+", 
       RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
     SubsuperscriptBox["l", "1", "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"3", " ", "m2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
     SubscriptBox["l", "1"], " ", 
     SubscriptBox["l", "2"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "1"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "2"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"m2", " ", 
     SubsuperscriptBox["l", "2", "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", "2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.9053209995163994`*^9, 3.90532100767089*^9}, 
   3.905325002926214*^9, {3.9053324066119933`*^9, 3.9053324134666166`*^9}, 
   3.905505920485201*^9, 3.9055059844998903`*^9, {3.905620854837659*^9, 
   3.9056208579432807`*^9}, 3.9056921563893476`*^9, {3.9059545828849087`*^9, 
   3.905954589412592*^9}, {3.9061068632263556`*^9, 3.9061068666109095`*^9}, 
   3.9061071295115232`*^9, 3.9061074608341036`*^9, 3.9061206831378064`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"9ee5c371-fc7d-471d-a948-9e56edaf8623"]
}, Open  ]],

Cell[TextData[{
 "Energia potencial (gravitacional) das barras tomando como refer\[EHat]ncia \
o marco ",
 StyleBox["y = 0 ",
  FontVariations->{"Underline"->True}],
 "\[EAcute] dada por:"
}], "Text",
 CellChangeTimes->{{3.9048491659275217`*^9, 3.90484917179697*^9}, {
  3.9048493622739544`*^9, 3.904849412032397*^9}, {3.905325016986388*^9, 
  3.905325032155815*^9}},ExpressionUUID->"2b801c00-765c-408c-8e77-\
5742b0a145fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V1", " ", "=", " ", 
   RowBox[{"m1", "*", "g", "*", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Rho]", "PO"], "/", "2"}], ")"}], ",", "2"}], 
     "]"}]}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V2", " ", "=", " ", 
    RowBox[{"m2", "*", "g", "*", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Rho]", "PO"], "+", 
         RowBox[{
          SubscriptBox["\[Rho]", "QP"], "/", "2"}]}], ")"}], ",", "2"}], 
      "]"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"composi\[CCedilla]\[ATilde]o", " ", 
     RowBox[{"vetorial", ":", " ", 
      RowBox[{
       SubscriptBox["\[Rho]", "QP"], "/", "2"}]}]}], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"G2", "-", "P"}], ")"}], " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{"G2", "-", "P"}], ")"}]}], "+", 
      RowBox[{"(", 
       RowBox[{"P", "-", "O"}], ")"}]}], "=", 
     RowBox[{"(", 
      RowBox[{"G2", "-", "O"}], ")"}]}]}], "*)"}]}], "\n", 
 RowBox[{"V", " ", "=", " ", 
  RowBox[{
   RowBox[{"V1", "+", "V2"}], " ", "//", "FullSimplify", " ", 
   RowBox[{"(*", 
    RowBox[{
    "energia", " ", "potencial", " ", "total", " ", "do", " ", "sistema"}], 
    "*)"}]}]}]}], "Code",
 CellChangeTimes->{{3.904849609430531*^9, 3.9048496305141473`*^9}, {
  3.904849914171544*^9, 3.9048499358733125`*^9}, {3.9048499670581503`*^9, 
  3.9048499976442623`*^9}, {3.9048501097175765`*^9, 3.904850122849183*^9}, {
  3.90485185876041*^9, 3.9048518616341524`*^9}, {3.904887748943804*^9, 
  3.904887757599592*^9}, {3.904889622512122*^9, 3.9048896245841656`*^9}, {
  3.9053210251847286`*^9, 3.905321046516373*^9}, {3.9053250402263966`*^9, 
  3.9053251136254225`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"724c2ce2-df19-4d2d-b0a0-0504be534d96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "g", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m1", "+", 
       RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "1"]}], "+", 
    RowBox[{"m2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.9048499402235346`*^9, 3.904849999485213*^9, 3.9048501238541126`*^9, 
   3.904850304635751*^9, 3.9048518623987293`*^9, {3.9048865030071883`*^9, 
   3.904886507479744*^9}, {3.9048877508070536`*^9, 3.9048877697120647`*^9}, {
   3.904889603892004*^9, 3.904889624869403*^9}, {3.904891566092809*^9, 
   3.9048915692562723`*^9}, 3.9048925596049013`*^9, 3.9048927540317154`*^9, 
   3.9048971645519576`*^9, 3.904897685140411*^9, {3.90528012470122*^9, 
   3.90528013029718*^9}, {3.905287055966505*^9, 3.9052870670327625`*^9}, {
   3.9052878195082273`*^9, 3.9052878276935196`*^9}, {3.9053183570097537`*^9, 
   3.9053183649407935`*^9}, 3.9053199892652874`*^9, 3.9053200620494366`*^9, {
   3.9053324069090853`*^9, 3.9053324135867167`*^9}, 3.905505920894055*^9, 
   3.9055059903150654`*^9, {3.905620854973837*^9, 3.905620858069942*^9}, 
   3.905692156683975*^9, {3.905954583063445*^9, 3.9059545895332317`*^9}, {
   3.9061068633453827`*^9, 3.906106866740419*^9}, 3.906107129635441*^9, 
   3.906107460954566*^9, 3.9061206832740836`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"cb828692-b8d3-4d53-88f5-6004557eb8c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Item B", "Section",
 CellChangeTimes->{{3.9053266478285923`*^9, 3.9053266498684893`*^9}, 
   3.905326700325267*^9},ExpressionUUID->"a32c1b8c-a007-4bff-a5b9-\
e09ea38e38ca"],

Cell["Equa\[CCedilla]\[ATilde]o din\[AHat]mica do sistema por meio do m\
\[EAcute]todo de Lagrange", "Text",
 CellChangeTimes->{{3.904887398384153*^9, 3.9048874056324687`*^9}, {
  3.9053251220209866`*^9, 3.905325131530928*^9}, {3.905326639340988*^9, 
  3.9053266418626804`*^9}},ExpressionUUID->"66546405-d6c6-455f-b0e7-\
ea4c6718dc70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", "=", " ", 
    RowBox[{"T", "-", "V"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Lagrangiano", " ", "do", " ", "sistema"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EL1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}]}], "]"}], 
         ",", "t"}], "]"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "]"}]}], "//", 
      "TrigReduce"}], " ", "//", "FullSimplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Equa\[CCedilla]\[ATilde]o", " ", "de", " ", "Lagrange", " ", "para", " ", 
    "v\[IAcute]nculos", " ", "hol\[OHat]nomos", " ", "em", " ", 
    "rela\[CCedilla]\[ATilde]o", " ", "a", " ", "coordenada", "\n", 
    "generalizada", " ", 
    SubscriptBox["\[Theta]", "1"]}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EL2", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}], "]"}], 
         ",", "t"}], "]"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}]}], "//", 
      "TrigReduce"}], " ", "//", "FullSimplify"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Equa\[CCedilla]\[ATilde]o", " ", "de", " ", "Lagrange", " ", "para", " ", 
    "v\[IAcute]nculos", " ", "hol\[OHat]nomos", " ", "em", " ", 
    "rela\[CCedilla]\[ATilde]o", " ", "a", " ", "coordenada", "\n", 
    "generalizada", " ", 
    SubscriptBox["\[Theta]", "2"]}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ELS", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EL1", ",", " ", "EL2"}], "}"}], " ", "//", "FullSimplify"}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Equa\[CCedilla]\[ATilde]o", " ", "din\[AHat]mica", " ", "do", " ", 
    "sistema", " ", "para", " ", "as", " ", "duas", " ", "coordenadas", " ", 
    "generalizadas"}], "*)"}], "\n"}], "\n", 
 RowBox[{"ELS", "//", "MatrixForm"}]}], "Code",
 CellChangeTimes->{{3.904853893398777*^9, 3.9048539122836337`*^9}, 
   3.9048875576198497`*^9, {3.904887684819071*^9, 3.9048877034901724`*^9}, {
   3.904887734747084*^9, 3.9048877387281823`*^9}, {3.904887782636583*^9, 
   3.9048877924248657`*^9}, {3.904887910224305*^9, 3.904887957242197*^9}, {
   3.90488983313276*^9, 3.9048898665435596`*^9}, {3.904889909980649*^9, 
   3.904889995254627*^9}, {3.904902338522915*^9, 3.904902369643697*^9}, {
   3.9049024036679044`*^9, 3.9049024123622327`*^9}, {3.9049024651448927`*^9, 
   3.904902599486519*^9}, 3.904902635737336*^9, {3.9053212705661125`*^9, 
   3.905321319579327*^9}, {3.905321414934459*^9, 3.905321422561513*^9}, {
   3.9053251330793777`*^9, 3.9053252210017943`*^9}, {3.905628316369931*^9, 
   3.9056283329326625`*^9}, {3.90562982220639*^9, 3.905629822890011*^9}, {
   3.9056298899976034`*^9, 3.9056298918858275`*^9}, 3.905629966096305*^9, {
   3.9061116667597895`*^9, 3.906111679006976*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"7e94619b-1e9d-4b80-beb8-b99e9bcc96f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "6"], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "g", " ", 
           RowBox[{"(", 
            RowBox[{"m1", "+", 
             RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"m1", "+", 
             RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
           SubscriptBox["l", "1"], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{"3", " ", "m2", " ", 
           SubscriptBox["l", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Theta]", "2"], "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "6"], " ", "m2", " ", 
        SubscriptBox["l", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "g", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SubscriptBox["l", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}]}], 
              " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Theta]", "1"], "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["l", "2"], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9049025143151073`*^9, {3.904902548387724*^9, 3.9049025959248886`*^9}, 
   3.904902636927722*^9, {3.905280126821455*^9, 3.9052801323868327`*^9}, {
   3.9052870603277917`*^9, 3.905287070022932*^9}, {3.905287822632958*^9, 
   3.9052878313118396`*^9}, {3.905318359874305*^9, 3.905318368201249*^9}, 
   3.905319997376309*^9, 3.9053200675710545`*^9, 3.9053213336520834`*^9, {
   3.9053214105757318`*^9, 3.905321434088647*^9}, {3.9053324090639687`*^9, 
   3.905332415775421*^9}, 3.9055059221077394`*^9, 3.9055059968352246`*^9, {
   3.9056208558502417`*^9, 3.9056208588644466`*^9}, {3.905628323565069*^9, 
   3.9056283346258426`*^9}, 3.905629892615206*^9, 3.9056299678982534`*^9, 
   3.90569215791949*^9, {3.9059545839034033`*^9, 3.905954590304829*^9}, {
   3.906106864130516*^9, 3.906106867588086*^9}, 3.906107130423805*^9, 
   3.9061074617525053`*^9, {3.906111668127227*^9, 3.9061116797904897`*^9}, 
   3.9061206840552855`*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"a34835e6-6639-490c-8e68-\
2e44229a1af0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sol", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Solve", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "\[Equal]", " ", "0"}], ")"}], "&"}], " ", "/@", 
        " ", "ELS"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"\[DoubleStruckV]", "'"}], "[", "t", "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], " ", "//", " ", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"\[DoubleStruckV]", "[", "t", "]"}], ",", " ", 
       "FullSimplify"}], "]"}], "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sol", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", "t", "]"}], "/.", 
        RowBox[{"(", 
         RowBox[{"g", " ", "->", " ", 
          RowBox[{
           SubscriptBox["l", "1"], "*", 
           RowBox[{
            SubscriptBox["\[Omega]", "p"], "^", "2"}]}]}], ")"}]}], "/.", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["l", "2"], "->", " ", 
         RowBox[{
          SubscriptBox["l", "1"], "/", "\[Lambda]"}]}], ")"}]}], "/.", 
      RowBox[{"(", 
       RowBox[{"m1", "->", 
        RowBox[{
         TemplateBox[<|
          "boxes" -> FormBox["\[Mu]", TraditionalForm], "errors" -> {}, 
           "input" -> "\\mu", "state" -> "Boxes"|>,
          "TeXAssistantTemplate"], "*", 
         SubscriptBox["l", "1"]}]}], ")"}]}], "/.", 
     RowBox[{"(", 
      RowBox[{"m2", "->", " ", 
       RowBox[{
        TemplateBox[<|
         "boxes" -> FormBox["\[Mu]", TraditionalForm], "errors" -> {}, 
          "input" -> "\\mu", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"], "*", 
        RowBox[{
         SubscriptBox["l", "1"], "/", "\[Lambda]"}]}]}], ")"}]}], " ", "//", 
    "FullSimplify"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sol", "[", "t", "]"}], "//", " ", "TableForm", "\t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Resolve", " ", "a", " ", "equa\[CCedilla]\[ATilde]o", " ", "ELS"}], "=", 
    RowBox[{"0", " ", "para", " ", "obter", " ", 
     RowBox[{
      RowBox[{"\[DoubleStruckV]", "'"}], "[", "t", "]"}], " ", "agrupando", 
     " ", "os", " ", "termos", " ", "de", " ", "mesma", " ", "pot\[EHat]ncia",
      " ", "de", " ", 
     RowBox[{"\[DoubleStruckV]", "[", "t", "]"}]}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.904888743192335*^9, 3.904888792050458*^9}, 
   3.9048895085378942`*^9, {3.9048900970828953`*^9, 3.904890124486035*^9}, {
   3.9048915591833353`*^9, 3.9048915602939434`*^9}, 3.904892037467868*^9, 
   3.9048924593458824`*^9, {3.904892764836892*^9, 3.904892811967474*^9}, {
   3.904892842638504*^9, 3.904892842986422*^9}, {3.9048929285107327`*^9, 
   3.904892977241374*^9}, {3.905321497023384*^9, 3.9053214985084996`*^9}, 
   3.905321589674554*^9, {3.90532522615173*^9, 3.9053252936692467`*^9}, {
   3.9056250336315317`*^9, 3.9056250336445036`*^9}, {3.9061070967278595`*^9, 
   3.9061071146454825`*^9}, {3.9061074323487716`*^9, 3.9061074498036127`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0163a2cd-8974-48c2-83a8-a5630f304bb5"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"3", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
                 "]"}]}]}], ")"}], " ", 
             SubsuperscriptBox["\[Omega]", "p", "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\[Lambda]", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], 
                " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Theta]", "1"], "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Theta]", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{"\[Lambda]", " ", 
          RowBox[{"(", 
           RowBox[{"15", "+", 
            RowBox[{"8", " ", "\[Lambda]"}], "-", 
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], ")"}]}], 
              "]"}]}]}], ")"}]}]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}]}], 
              "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"6", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}], 
             ")"}], " ", 
            SubsuperscriptBox["\[Omega]", "p", "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Lambda]", " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", "\[Lambda]"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Theta]", "1"], "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], 
               " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Theta]", "2"], "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], 
        RowBox[{"15", "+", 
         RowBox[{"8", " ", "\[Lambda]"}], "-", 
         RowBox[{"9", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], ")"}]}], 
           "]"}]}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9048928140622215`*^9, 3.9048928443658295`*^9, 3.9048929821889687`*^9, 
   3.9048971662548923`*^9, 3.9048974942750673`*^9, 3.904897693068931*^9, {
   3.905280128843143*^9, 3.905280134382472*^9}, {3.9052870635201864`*^9, 
   3.9052870730184994`*^9}, {3.9052878256907625`*^9, 
   3.9052878342960186`*^9}, {3.9053183624601064`*^9, 3.905318371311609*^9}, 
   3.9053200064567165`*^9, 3.90532007313935*^9, 3.905321596030344*^9, {
   3.905332411202501*^9, 3.9053324178167887`*^9}, 3.905505923714305*^9, 
   3.9055060030666323`*^9, {3.9056208568114223`*^9, 3.9056208598007965`*^9}, 
   3.905692159313658*^9, {3.905954584872841*^9, 3.9059545912343407`*^9}, {
   3.9061068651798673`*^9, 3.9061068685432987`*^9}, {3.906107110170334*^9, 
   3.9061071330078454`*^9}, {3.9061074574235425`*^9, 3.906107464672513*^9}, 
   3.9061206871102395`*^9},
 CellLabel->
  "Out[29]//TableForm=",ExpressionUUID->"031443ec-2c8d-4c1d-8e98-\
d73042d640b8"]
}, Open  ]],

Cell["\<\
Escrevendo as equa\[CCedilla]\[OTilde]es de movimento \
n\[ATilde]o-linearizadas na forma de espa\[CCedilla]o de estados\
\>", "Text",
 CellChangeTimes->{{3.904850319945073*^9, 3.904850326032256*^9}, {
  3.9052822208415995`*^9, 
  3.905282225094644*^9}},ExpressionUUID->"00dc0acd-343b-4b7f-8fed-\
f624da75db43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckX]", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", " ", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"F", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[DoubleStruckX]", "'"}], "[", "t", "]"}], " ", "/.", 
      RowBox[{"Sol", "[", "t", "]"}]}], ")"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "F", " ", "denota", " ", "sempre", " ", "a", " ", "derivada", " ", "do", 
     " ", "vetor", " ", "de", " ", 
     RowBox[{"estados", ".", " ", "Note"}], " ", "que", " ", "foi", " ", 
     "feita", " ", "a", " ", "derivada", " ", "e", " ", "ao", " ", "por", 
     " ", "\"\<./\>\"", " ", "substitui"}], "-", 
    RowBox[{"se", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", "e", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\n", "pelo", " ", 
     "resultado", " ", "colhido", " ", "acima", " ", "na", " ", 
     "equa\[CCedilla]\[ATilde]o", " ", "din\[AHat]mica", " ", "do", " ", 
     "sistema"}]}], "*)"}]}], "\n", 
 RowBox[{"F", " ", "//", "MatrixForm"}]}], "Code",
 CellChangeTimes->{
  3.9048533606820545`*^9, {3.9048534675183287`*^9, 3.904853478629942*^9}, 
   3.9048535303066664`*^9, {3.904853725502051*^9, 3.904853753741739*^9}, {
   3.9048542394687843`*^9, 3.904854246887556*^9}, {3.9048542835272946`*^9, 
   3.904854308216706*^9}, {3.904854352178146*^9, 3.904854354243992*^9}, 
   3.904886935014092*^9, {3.904897256259887*^9, 3.904897260742818*^9}, {
   3.9048973065396748`*^9, 3.9048973075383053`*^9}, {3.90489734820177*^9, 
   3.9048974777854524`*^9}, 3.9048977247270546`*^9, {3.904901660440859*^9, 
   3.9049017440971828`*^9}, {3.904901780540751*^9, 3.904901807754842*^9}, {
   3.9049022823599467`*^9, 3.90490232690656*^9}, {3.9049026090585556`*^9, 
   3.904902621019614*^9}, {3.9052810876836567`*^9, 3.905281107609989*^9}, {
   3.905321763402178*^9, 3.905321821326211*^9}, {3.9053253028984556`*^9, 
   3.9053253681122646`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"6dbacf29-3331-420e-9f3c-07f76b8340fa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"3", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
                 "]"}]}]}], ")"}], " ", 
             SubsuperscriptBox["\[Omega]", "p", "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\[Lambda]", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], 
                " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Theta]", "1"], "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Theta]", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{"\[Lambda]", " ", 
          RowBox[{"(", 
           RowBox[{"15", "+", 
            RowBox[{"8", " ", "\[Lambda]"}], "-", 
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], ")"}]}], 
              "]"}]}]}], ")"}]}]]}]},
      {
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}]}], 
              "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"6", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}], 
             ")"}], " ", 
            SubsuperscriptBox["\[Omega]", "p", "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Lambda]", " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", "\[Lambda]"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Theta]", "1"], "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], 
               " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Theta]", "2"], "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], 
        RowBox[{"15", "+", 
         RowBox[{"8", " ", "\[Lambda]"}], "-", 
         RowBox[{"9", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], ")"}]}], 
           "]"}]}]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9061206872118373`*^9, 3.906120687880032*^9}},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"77013bd9-9d09-4435-929d-\
4b94e5c13560"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.906120666859843*^9, 
  3.906120689658658*^9}},ExpressionUUID->"135af456-4026-46e2-bb4d-\
a9c5d4314344"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Item C", "Section",
 CellChangeTimes->{{3.9053266907485914`*^9, 
  3.905326691867611*^9}},ExpressionUUID->"f8c24243-e284-40e9-9ad0-\
7d2fb3723a52"],

Cell[TextData[{
 "Realizando a lineariza\[CCedilla]\[ATilde]o com base na posi\[CCedilla]\
\[ATilde]o ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Theta]", "1"], "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\theta_1 =  0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8062860d-6b89-48db-9b71-d28a9921c61e"],
 " e ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Theta]", "2"], "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\theta_2 = 0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b2008bc5-b6b7-4eef-9fb5-8a124f023335"]
}], "Text",
 CellChangeTimes->{{3.905281125082872*^9, 3.9052811347966366`*^9}, {
  3.9052815040202866`*^9, 
  3.9052815221852207`*^9}},ExpressionUUID->"452857ab-abea-4650-be9b-\
d32694b61e86"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"POSequi", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], " ", "->", " ", "0"}],
       " ", ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], " ", "->", " ", 
       "0"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Posi\[CCedilla]\[ATilde]o", " ", "de", " ", "equil\[IAcute]brio", " ", 
    "trivial", " ", "do", " ", "sistema"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ELSlin", " ", "=", " ", 
    RowBox[{"Linearize", "[", 
     RowBox[{"ELS", ",", " ", "POSequi"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"ELS", " ", "->", " ", 
    RowBox[{
     RowBox[{
     "Equa\[CCedilla]\[ATilde]o", " ", "din\[AHat]mica", " ", "n\[ATilde]o"}],
      "-", "linear"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sollin", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Solve", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "\[Equal]", " ", "0"}], ")"}], "&"}], " ", "/@", 
        " ", "ELSlin"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"\[DoubleStruckV]", "'"}], "[", "t", "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], " ", "//", " ", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"\[DoubleStruckV]", "[", "t", "]"}], ",", " ", 
       "FullSimplify"}], "]"}], "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sollin", "[", "t", "]"}], " ", "//", " ", "TableForm", 
  "\t"}]}], "Code",
 CellChangeTimes->{{3.9049020691468005`*^9, 3.904902070151019*^9}, {
  3.905281598582791*^9, 3.90528170761444*^9}, {3.905281858712141*^9, 
  3.905281904461722*^9}, {3.9052820302333794`*^9, 3.905282058943598*^9}, {
  3.905322101698219*^9, 3.905322114647581*^9}, {3.905325375687458*^9, 
  3.9053253848242736`*^9}, {3.9056250336662807`*^9, 3.9056250336701803`*^9}, {
  3.905688152275608*^9, 3.905688169722313*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"3acf1e86-1634-48ba-be33-1c01b7cf4202"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "+", 
         RowBox[{"9", " ", "g", " ", "m2", " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "m1"}], "+", 
           RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
         SubscriptBox["l", "1"]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"9", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "-", 
         RowBox[{"6", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "m1"}], "+", 
           RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
         SubscriptBox["l", "2"]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.905281904752203*^9, 3.905281982777211*^9, 3.9052820601178427`*^9, {
   3.9052870646247616`*^9, 3.9052870735020685`*^9}, {3.9052878261377773`*^9, 
   3.9052878349989853`*^9}, {3.905318363097459*^9, 3.905318371846984*^9}, 
   3.9053200076794624`*^9, 3.905320073991119*^9, {3.905322102269358*^9, 
   3.9053221265757065`*^9}, {3.905332411932639*^9, 3.905332418138177*^9}, 
   3.905505924269044*^9, 3.9055060202359977`*^9, {3.9056208570636487`*^9, 
   3.9056208600126004`*^9}, 3.905625061680893*^9, 3.905692159799182*^9, {
   3.9059545853783464`*^9, 3.905954591424597*^9}, {3.906106865452777*^9, 
   3.906106868759013*^9}, 3.9061071332084494`*^9, 3.9061074648360076`*^9, 
   3.906120687316617*^9},
 CellLabel->
  "Out[36]//TableForm=",ExpressionUUID->"e68e69e5-5a08-4f79-8ccd-\
7704b48c51f9"]
}, Open  ]],

Cell["\<\
Escrevendo as equa\[CCedilla]\[OTilde]es de movimento linearizadas na forma \
de espa\[CCedilla]o de estados\
\>", "Text",
 CellChangeTimes->{{3.904850319945073*^9, 3.904850326032256*^9}, {
  3.9052822071108036`*^9, 
  3.9052822139239545`*^9}},ExpressionUUID->"ccdecf72-1d02-42a3-99b5-\
f1f90285748c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckX]", "lin"], "[", "t_", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", " ", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}], "}"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Um", " ", "novo", " ", "vetor", " ", "de", " ", "estados", " ", 
     "exatamente", " ", "igual", " ", "ao", " ", "outro", " ", "foi", " ", 
     "feito", " ", "apenas", " ", "para", " ", "deixar", " ", "o", " ", 
     "valor", "\n", "das", " ", "vari\[AAcute]veis", " ", "para", " ", "cada",
      " ", "caso", " ", "separado", " ", "e", " ", "a", " ", 
     "diferen\[CCedilla]a", " ", "entre", " ", "eles", " ", 
     RowBox[{"expl\[IAcute]cita", ".", " ", "Contudo"}]}], ",", " ", 
    RowBox[{"\[CapitalEAcute]", " ", "O", " ", "MESMO", " ", "VETOR"}], ",", 
    " ", 
    RowBox[{
    "o", " ", "que", " ", "muda", " ", "\[EAcute]", " ", "que", " ", "com", 
     " ", "a", " ", "lineariza\[CCedilla]\[ATilde]o", "\n", "ao", " ", 
     "substituir", " ", "a", " ", "solu\[CCedilla]\[ATilde]o", " ", "linear", 
     " ", 
     RowBox[{"(", "Sollin", ")"}], " ", "em", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckX]", "lin"], "'"}], "[", "t", "]"}], " ", 
     "muitos", " ", "termos", " ", "s\[ATilde]o", " ", "simplificados", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"em", " ", "especial"}], ",", " ", 
       RowBox[{"os", " ", "trigonom\[EAcute]tricos"}]}], ")"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "lin"], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckX]", "lin"], "'"}], "[", "t", "]"}], " ", "/.", 
     RowBox[{"Sollin", "[", "t", "]"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  SubscriptBox["F", "lin"], " ", "//", "MatrixForm"}]}], "Code",
 CellChangeTimes->{
  3.9048533606820545`*^9, {3.9048534675183287`*^9, 3.904853478629942*^9}, 
   3.9048535303066664`*^9, {3.904853725502051*^9, 3.904853753741739*^9}, {
   3.9048542394687843`*^9, 3.904854246887556*^9}, {3.9048542835272946`*^9, 
   3.904854308216706*^9}, {3.904854352178146*^9, 3.904854354243992*^9}, 
   3.904886935014092*^9, {3.904897256259887*^9, 3.904897260742818*^9}, {
   3.9048973065396748`*^9, 3.9048973075383053`*^9}, {3.90489734820177*^9, 
   3.9048974777854524`*^9}, 3.9048977247270546`*^9, {3.904901660440859*^9, 
   3.9049017440971828`*^9}, {3.904901780540751*^9, 3.904901807754842*^9}, {
   3.9049022823599467`*^9, 3.90490232690656*^9}, {3.9049026090585556`*^9, 
   3.904902621019614*^9}, {3.9052810876836567`*^9, 3.905281107609989*^9}, {
   3.905282231863552*^9, 3.9052822656226597`*^9}, {3.905288095896497*^9, 
   3.905288102432392*^9}, {3.9053222026635914`*^9, 3.9053222028914614`*^9}, {
   3.9053254042737465`*^9, 3.905325479369602*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"59090002-d7b6-405a-a555-24b1da34ee6a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "+", 
         RowBox[{"9", " ", "g", " ", "m2", " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "m1"}], "+", 
           RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
         SubscriptBox["l", "1"]}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"9", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"2", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "-", 
         RowBox[{"6", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "m1"}], "+", 
           RowBox[{"3", " ", "m2"}]}], ")"}], " ", 
         SubscriptBox["l", "2"]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9052822515124598`*^9, 3.9052822675944877`*^9}, {
   3.905287064743722*^9, 3.905287073564127*^9}, {3.905287826177103*^9, 
   3.9052878350446825`*^9}, 3.9052881033213835`*^9, {3.905318363133647*^9, 
   3.9053183718858333`*^9}, 3.905320007806733*^9, 3.90532007408031*^9, 
   3.9053222037466183`*^9, {3.905332411983981*^9, 3.9053324181661015`*^9}, 
   3.9055059243314204`*^9, 3.905506024907055*^9, {3.9056208570915737`*^9, 
   3.905620860047468*^9}, 3.9056921598716793`*^9, {3.905954585419289*^9, 
   3.905954591456748*^9}, {3.9061068655084963`*^9, 3.906106868790513*^9}, 
   3.906107133250347*^9, 3.906107464869959*^9, 3.9061206873621793`*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"49b0efdf-9ec0-4638-99b4-\
963aa8c58dcd"]
}, Open  ]],

Cell[TextData[{
 "Substituindo os par\[AHat]metros ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox["\[Omega]", 
        StyleBox["p", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\omega_p", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "be14476b-8831-4a35-bff2-4c2cd80a0ccb"],
 " e ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["\[Lambda]", TraditionalForm], "errors" -> {}, "input" -> 
     "\\lambda", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "01f731ee-c478-4fa1-9824-60f298194482"],
 " no vetor de estados linearizado:"
}], "Text",
 CellChangeTimes->{{3.904897911156041*^9, 3.904897993645727*^9}, {
  3.905282283230648*^9, 
  3.9052822856895933`*^9}},ExpressionUUID->"56a9a641-2263-4674-9e8f-\
bad84f7e1e73"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["F", "lins"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["F", "lin"], "/.", 
         RowBox[{"(", 
          RowBox[{"g", "->", 
           RowBox[{
            SubscriptBox["l", "1"], "*", 
            RowBox[{
             TemplateBox[<|"boxes" -> FormBox[
                 SubscriptBox["\[Omega]", 
                  StyleBox["p", "TI"]], TraditionalForm], "errors" -> {}, 
               "input" -> "\\omega_p", "state" -> "Boxes"|>,
              "TeXAssistantTemplate"], "^", "2"}]}]}], ")"}]}], "/.", 
        RowBox[{"(", 
         RowBox[{"m1", "->", 
          RowBox[{
           
           TemplateBox[<|
            "boxes" -> FormBox["\[Mu]", TraditionalForm], "errors" -> {}, 
             "input" -> "\\mu", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], 
           SubscriptBox["l", "1"]}]}], ")"}]}], "/.", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["l", "1"], "->", 
         RowBox[{
          
          TemplateBox[<|
           "boxes" -> FormBox["\[Lambda]", TraditionalForm], "errors" -> {}, 
            "input" -> "\\lambda", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"], "*", 
          SubscriptBox["l", "2"]}]}], ")"}]}], "/.", 
      RowBox[{"(", 
       RowBox[{"m2", "->", 
        RowBox[{
         TemplateBox[<|
          "boxes" -> FormBox["\[Mu]", TraditionalForm], "errors" -> {}, 
           "input" -> "\\mu", "state" -> "Boxes"|>,
          "TeXAssistantTemplate"], "*", 
         SubscriptBox["l", "2"]}]}], ")"}]}]}], ";"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Nova", " ", "F", " ", "foi", " ", "criada", " ", 
     RowBox[{"(", "lins", ")"}], " ", "apenas", " ", "para", " ", "termos", 
     " ", "em", " ", "m\[ATilde]os", " ", "um", " ", "vetor", " ", "de", " ", 
     "estado", "\n", "derivado", " ", "com", " ", "os", " ", 
     "par\[AHat]metros", " ", "substitu\[IAcute]dos", " ", "e", " ", "outro", 
     " ", "ainda", " ", "original"}], ",", " ", 
    RowBox[{"caso", " ", "necess\[AAcute]rio"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "lins"], " ", "//", "FullSimplify"}], " ", "//", 
  "MatrixForm"}]}], "Code",
 CellChangeTimes->{{3.90489800842735*^9, 3.9048981591510725`*^9}, {
   3.904898301293062*^9, 3.9048983571279593`*^9}, {3.904898440117175*^9, 
   3.904898584888459*^9}, {3.9049013301846995`*^9, 3.9049013547797456`*^9}, {
   3.9049020308768506`*^9, 3.904902182034997*^9}, {3.9049023225243063`*^9, 
   3.904902324877405*^9}, {3.904902452340946*^9, 3.9049024596046963`*^9}, {
   3.9049026434321504`*^9, 3.9049026817841487`*^9}, {3.904908711770819*^9, 
   3.9049087122703686`*^9}, 3.9052810825308094`*^9, {3.9052811170837283`*^9, 
   3.905281118763986*^9}, {3.905282293018384*^9, 3.905282296630684*^9}, {
   3.905282327010611*^9, 3.905282331543827*^9}, {3.9052884036457367`*^9, 
   3.905288405777211*^9}, {3.9053224068078794`*^9, 3.905322410096648*^9}, {
   3.905325498125871*^9, 3.905325540704956*^9}, {3.9055060532435026`*^9, 
   3.905506054556139*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"135c8d41-99c0-44bc-ba4c-710f1292a6f3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       FractionBox[
        RowBox[{"3", " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ")"}]}], 
        RowBox[{"3", "+", 
         RowBox[{"4", " ", "\[Lambda]"}]}]]},
      {
       FractionBox[
        RowBox[{"3", " ", "\[Lambda]", " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ")"}]}], 
        RowBox[{"3", "+", 
         RowBox[{"4", " ", "\[Lambda]"}]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.905282299830864*^9, 3.9052823330994167`*^9, {3.905287065333745*^9, 
   3.905287073700589*^9}, {3.905287826355698*^9, 3.9052878352007484`*^9}, 
   3.9052884069842615`*^9, {3.905318363324699*^9, 3.905318372121387*^9}, 
   3.905320009100894*^9, 3.9053200744061565`*^9, 3.9053224111607246`*^9, 
   3.90532554236544*^9, {3.905332412383872*^9, 3.9053324182625566`*^9}, 
   3.9055059248436913`*^9, 3.905506056015298*^9, {3.905620857155404*^9, 
   3.905620860110361*^9}, 3.9056921600733757`*^9, {3.9059545857289047`*^9, 
   3.905954591515588*^9}, {3.9061068657931027`*^9, 3.9061068688982353`*^9}, 
   3.906107133309183*^9, 3.9061074649309454`*^9, 3.9061206874959927`*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"6331c3d0-f3b7-425b-a2a7-\
0f2d963623e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Item D", "Section",
 CellChangeTimes->{{3.905326715904763*^9, 
  3.905326717084689*^9}},ExpressionUUID->"d2897609-6874-4bb0-87bf-\
c2c1ca1c96d1"],

Cell[TextData[{
 "Analisando o vetor acima, nota-se que o sistema n\[ATilde]o \[EAcute] \
amortecido e, pelo enunciado, n\[ATilde]o \[EAcute] for\[CCedilla]ado. \
Pode-se propor solu\[CCedilla]\[ATilde]o exponencial e, para encontrar as \
frequ\[EHat]ncias naturais, resolver um",
 StyleBox[" ",
  FontVariations->{"Underline"->True}],
 StyleBox[ButtonBox["problema de autovalores",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://lpsa.swarthmore.edu/MtrxVibe/EigApp/EigVib.html"], None},
  ButtonNote->"https://lpsa.swarthmore.edu/MtrxVibe/EigApp/EigVib.html"],
  FontVariations->{"Underline"->True}],
 ". Para isso, \[EAcute] necess\[AAcute]rio antes obter a matriz A do \
sistema,  a matriz de estados."
}], "Text",
 CellChangeTimes->{{3.9052870978681545`*^9, 3.905287159341154*^9}, {
  3.905287342528126*^9, 3.9052873452639356`*^9}, {3.905287384513897*^9, 
  3.9052873959958262`*^9}, {3.905287448064326*^9, 3.9052875030893536`*^9}, {
  3.9053257088416047`*^9, 
  3.905325768712726*^9}},ExpressionUUID->"5f711779-f8d5-4bc2-8344-\
e1da913b6e7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"CoefficientArrays", "[", 
      RowBox[{
       SubscriptBox["F", "lins"], ",", " ", 
       RowBox[{
        SubscriptBox["\[DoubleStruckX]", "lin"], "[", "t", "]"}]}], "]"}], 
     "[", 
     RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}]}], ";"}], "\n", 
 RowBox[{"A", " ", "//", "MatrixForm", " "}]}], "Code",
 CellChangeTimes->{{3.9052873599860272`*^9, 3.905287379774262*^9}, {
   3.9052878406113214`*^9, 3.905287922104003*^9}, {3.9052879634590425`*^9, 
   3.90528800906301*^9}, {3.9052881931066494`*^9, 3.9052882264149675`*^9}, {
   3.905288280672099*^9, 3.9052883599663444`*^9}, 3.9052884092598333`*^9, {
   3.9052885388279753`*^9, 3.905288553924229*^9}, {3.905288722986864*^9, 
   3.905288723222934*^9}, {3.905288823011402*^9, 3.9052888574282293`*^9}, {
   3.9052894652998343`*^9, 3.90528950535048*^9}, {3.905290208296176*^9, 
   3.9052902580380387`*^9}, {3.9052906305525775`*^9, 3.905290634979271*^9}, {
   3.9052909742210646`*^9, 3.905290980725313*^9}, {3.9053226691134043`*^9, 
   3.9053226834834747`*^9}, 3.905322864100201*^9, {3.9053230087805176`*^9, 
   3.905323061737808*^9}, {3.905323337394105*^9, 3.905323337669441*^9}, {
   3.9053255707695937`*^9, 3.905325604195282*^9}, {3.905325660113448*^9, 
   3.905325663325775*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"d2597db5-5b59-4b86-a8a7-b076be8a6501"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Mu]", " ", 
            SubscriptBox["l", "2"]}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Mu]", " ", 
            SubscriptBox["l", "2"]}]}], ")"}], " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"]}], 
        RowBox[{
         RowBox[{"3", " ", "\[Mu]", " ", 
          SubscriptBox["l", "2"]}], "+", 
         RowBox[{"4", " ", "\[Lambda]", " ", "\[Mu]", " ", 
          SubscriptBox["l", "2"]}]}]]}], 
      FractionBox[
       RowBox[{"9", " ", "\[Mu]", " ", 
        SubscriptBox["l", "2"], " ", 
        SubsuperscriptBox["\[Omega]", "p", "2"]}], 
       RowBox[{
        RowBox[{"3", " ", "\[Mu]", " ", 
         SubscriptBox["l", "2"]}], "+", 
        RowBox[{"4", " ", "\[Lambda]", " ", "\[Mu]", " ", 
         SubscriptBox["l", "2"]}]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"9", " ", "\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Mu]", " ", 
           SubscriptBox["l", "2"]}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Mu]", " ", 
           SubscriptBox["l", "2"]}]}], ")"}], " ", 
        SubsuperscriptBox["\[Omega]", "p", "2"]}], 
       RowBox[{
        RowBox[{"3", " ", "\[Mu]", " ", 
         SubscriptBox["l", "2"]}], "+", 
        RowBox[{"4", " ", "\[Lambda]", " ", "\[Mu]", " ", 
         SubscriptBox["l", "2"]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"6", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Mu]", " ", 
            SubscriptBox["l", "2"]}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Mu]", " ", 
            SubscriptBox["l", "2"]}]}], ")"}], " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"]}], 
        RowBox[{
         RowBox[{"3", " ", "\[Mu]", " ", 
          SubscriptBox["l", "2"]}], "+", 
         RowBox[{"4", " ", "\[Lambda]", " ", "\[Mu]", " ", 
          SubscriptBox["l", "2"]}]}]]}], "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9052888491864557`*^9, 3.9052888581486535`*^9}, {
   3.9052894700339613`*^9, 3.905289505896106*^9}, {3.905290222990466*^9, 
   3.9052902440398455`*^9}, {3.905290630915882*^9, 3.9052906354082108`*^9}, {
   3.9052909746541786`*^9, 3.9052909810018034`*^9}, {3.905318363360611*^9, 
   3.9053183721708384`*^9}, 3.9053200092971272`*^9, 3.905320074515482*^9, {
   3.9053226731869383`*^9, 3.905322683917296*^9}, 3.9053228645661244`*^9, {
   3.905323011318084*^9, 3.905323062394231*^9}, 3.9053233385147614`*^9, {
   3.905325579771788*^9, 3.9053256051957817`*^9}, 3.9053256638190975`*^9, {
   3.9053324124827204`*^9, 3.905332418290838*^9}, 3.90550592494144*^9, 
   3.905506061809181*^9, {3.9056208571853228`*^9, 3.9056208601472*^9}, 
   3.905692160192493*^9, {3.905954585775324*^9, 3.9059545915520725`*^9}, {
   3.9061068658546233`*^9, 3.906106868914383*^9}, 3.9061071333530626`*^9, 
   3.906107464969624*^9, 3.906120687553384*^9},
 CellLabel->
  "Out[43]//MatrixForm=",ExpressionUUID->"015bf920-1975-42e7-87aa-\
e02a3789dec2"]
}, Open  ]],

Cell[TextData[{
 "Note que:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
67Lc42b85phzsbKQpJEd3Qe1OFzYjNiDz0c4JI+xacRQRN4sqvjcvWPRhCdA
q7mpVfd5FWzHICEfLef/p9yr0G8QN1B6LrwLVj1UV1+KkBbsCr4Fo5u19irs
0LZHJ9oyXqK0P/vGvNH8BcSZWsbImNH09hGunD6oXpyMcTqHxzcA32EKTqmI
ZWkcJys+ynwFoBHfXp1ny0e657DNp3nYHuHVlsTcABCvQiAQCAQCQVuM6lWK
dde2JefxSzMeOOYDEFe5pAX9Apt7W4LDd0Nw2hcTIHkSCU9La3w3Iwl55QWv
KAOhLfjgNhyPw5U9Q1ECRljy4RqcptyrFB3BBFvpPfg5qGKdFF8Ezkx3BN96
LPZr61VYom33j6wPjqw/hfDarEXi7bexGsfIIHmF40tGYsDoafhtfYx6cTLG
dez2sQC/uap+0iJOVnKW+ZoOJ76VOs9W8GdvYH6rT7nDWyDkGvEqBAKBQCAQ
CMaOq+isbWW5nPjgOUzGyUqaVHx3JboIuajbZwuelQsz0Ll74dfUGq6BB/C2
vPj8lA9X6I2/KvseWa1tPmwDjirdeyTKCJXdg284vuI9eFosVnIWpxiHxtmA
7zQdZ7U9r8ISbSs9d8Mp856Dtmue1Ux8PUyzGBnzrj7eNAJDI2+iqPLzlcXJ
UIDtg6Q1JecrrympTZxMxPjZtGC48i3Ue748mHm4rOOXfHy/kbgKgUAgEAgE
gvHjKjpqW2ktjkhPSlb3IrWC5izAicnfgF/bAytuqGcA6Ld7MKI+F1T731Dl
siX3sKIzBaF3LBRXJJfg6TpPCDiW8P4r98s9eFEmlg0PRYqiZjB6OKavAFTX
tXii7dYtlmjbJKY/uWXec6AWIrTk/C8axchK+98S1t/NQFJepaiHsjgZ42wS
RliC7xqsvF6KNnGykjPM13Q48q3V/AU5GHUeGhniVQgEAoFAIGiLkb2KrtpW
GptJmekMynYikssFPEQ3fkfnWtbwXJWpMm/Xp7ZcC3eHhbA5gpLk7fUpxMFx
DUC1WoDLCjVrMfMcG3ArnBehkb1rPHzWVc2/+6WxjKZ2o2A3MVmHnMrs0La6
9qfoQohGMTLQudjr1xTWroE48LZSrymLk5WdleLbBuCokjddqzhZ8SHmaxxs
+E5KrlQFLOlPg0C8ig5IkJOxDQunBGFy4Dj4DPbB1NWHcf9DdbeLQCCYDmQd
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
sZ2/FdHumLYnv5a929dqoaxPLszBnzNnI6q4Plon6fehryguSX7UbNaKGsSx
3QaiGEPZc4HSKBfG7x2CkP9kVyJhxiaMoAzguK+w1tpRlpmGW9lS9j39AjsZ
H7y9UwS7+ossY8DoN3dx6KdAhF6VG0P1Q/xqyzyzubI+onoy1uxlGzhin4Lc
hHrJKLiF1f0MYBf6UrVgBK2j2ft01Ne2xVvEe3aBrg4z73+r/ZwWZm3FV4xN
pNNxJk7Wu7QZoysbv4CeiTviFX6GABmJO7Bhw2/47bffEDyjLygdLiwmr8J6
5t+/bdiKE/eUeC1vj8Glgx5GqVsjWuttW9H+46ficx+u9XLUeuQooSn8Tsnw
ROdkeuj7Y1qddjJ731OAlKWWWGqpJ459V4fS465i/dMxnIA9WpC/0ehUxMFN
nKOmA8Oph5TndjcVggyc+jkQe25Ix8gLkR1qh3ZGk7D3hew9EcWfuFkbY8DC
M1LPw9c45dYFHEM77HxXu//tIXzb1w8X3k8cGkUXAzDYxA6h0rU9sw5g+kh/
XKj3eeEbHJ7aARaLr6rYZ+LjcaQbrI0HYOEZqTXj9Sm4deHA0G4nZFoOlMfB
vRMXPfySZT6Tf84X5lQvxtdifvo2CWtDLkokK4qAkyGFL0T2B2MDRgRuVzoS
Oi8es626Ydzv91iu9er5KnTRZWYddscft9/I3M9nv8/EogtS0jS7jJU47dUZ
XbwTWcnVqmD8619t9dBuykGZvXVRTNPJ7zpCt+M0HJKJ12I/f98e+hZ9/S58
WK/pIlwMGAwTxif8oHYCZB2YjpH+F+pdw/HN4anoYKG6nhTrtaKG8jh3dOLK
x3XzGf/NHFQvxtcST8m1CLko+r3oXMgJhjVnd8KcCARuV1angUZe/GxYdRuH
3++xtLBY+iqS/r46MHCW6+ct9gm40KFGYJNUoJxaMjL3LsLJsOacRIiciEBs
V5oTz1LGytPw6twF3olNVe+WoBm0oU9H/WxbvDmFWaaMzcPtj8A7tf/o7fEZ
6KgjyYP5r95ivcahqe0U53XVjD3r4kHsDQ9HePg2ePSjmOvYDx7bRP8Ox969
h3DpmRKBqv8V10TqMP24WrEfLcG2rUoJYPwO0ZwaiHUsC9M2vt9Z81mi/XI9
E7grdj7r7Xu+PeaCYy4doDdKuQ2j4K8YO0xUg08H7Rz3NnH8ZTMh7oNR0wO2
r6byjxowHPHc4qLPD9fe26x0fgJ8rMzhFJYhtbdOozRtM+y76aOP+zFky03r
yuuiXHwKA9f+I/GBBXcQ+Lkh+jivRdjBfdi0aDwsTAdh1FBjGA10wy/7DmP/
pgX4pucncD3akDpy1Xjw81C0m/Cn4r1EuhRpm+3RTb8P3I9ly50RVeJ6ALP2
Mnq69p8PN0Jc44jLgbnv+fe2Nv06BcEjjcDhOSCcsSNLohfAL1piaVbfD4GN
nhnmnK1krucf8F55VfFIc+Kw2G4sFhx9BPZl1tn7KnThRfw43Bz9nXwwb968
9y9fn+8xqs847JDyO5tdRvE5TXuM3fmC5XVoTdDIPzEL5p0mY7/UM4wuSYB3
D0MM+DFFytdQb/4K7gTic8M+cF4bhoP7NmHReAuYDhqFocZGGOj2C/Yd3o9N
C75Bz09ccbQBjQOqH/yMoe0m4E/FSqfeWiEZubieH5djDt/z72ckXqcEY6QR
BzyHcBTRJYhe4Ido8YFMNe6H2EDPbA7OVgqR9Yc3Vl5V9EyrRk7cYtiNXYCj
j9RobsDSVxE+2w17i3HYclfW6+OnrcYAioOu049I1SlVU0Zx3Ug9mInqLgmz
8If3SigUUQ0ZxWdR7cdi5wvtetgKCu7i5NaV8PebB5/ZfgjanYSHSmoTND0C
FNw9ia0r/eE3zwez/YKwO+khmnZ42tGnoz62rbgnl8hmp3riq+nf4bvvpF+u
cBxozNiAuug296/6146qTse6QRQMXaLqrl3OPwMfUbyQ9QrZGHWlvMYBp7ag
2MQivaeF2Lbi2gHcmtr07PrWNr7fKeH1oalop6huSg319T2r/w1h/H4bUB2m
sx9M+Wl4mzFy63TAlEgN15zUWiQxeFxxjhrzrG/uSSx8igi38XDfGIWzF8/h
1J4VcBr6FeZG3JfVeUGK+NzM3DkMjxQtKMzn7JpgBG43V0SJE1yEyDnmAcu2
klxAg972WPvXS/Af78dMK0NxDCenfV+47rwlt+YL8TJpK9YEzoeb/wFcPb8L
6wLXYu0KX/j9eh4vFUxb0fnf52bfK8xdk8SamsM57JHCdVD4dBcmGHHRzTWq
Ji9HiEfrh4HimcN64Ch4r9+NPVuDsNDvJ5xMPY65fa0xLSgE8+eH4v32peAB
djlZwNZ7PVb7Lkd0tvwgGdvtdih8PYIQL2kGjvzkk7jEquYk216QOQibaCSp
va/gxTGfh/Pvt3KbX0a68AAmm4yU2XP+uHiD9HAvjPxmLrafOIfzcbvhP6ov
Ri05hSypJVbt+cvMg2MelmhbkxPX234t/nrJx+P9M2FlKIpH4KB9X1fsvCXX
r0v4Eklb1yBwvhv8D1zF+V3rELh2LVb4+uHX8y9r7yUIbiPwczN8r1jp1Fwr
RD97hPXDKPDMrTFwlDfW796DrUEL4ffTSaQen4u+1tMQFDIf80M/nNUJHuyC
k4UtM39Xw3d5NGpPyVLcDvWFR1A8JFMyH8knL9WOYVQE6zpgQuSeDcasqV5Y
teMoEpMvIGH/Gkyy6oZBHntwV/ryqC2jAA92OcHClnnval8sj86ufR/UkpFG
4YHJMBm5iX1NhEZHiLwLazC61yDMifwHRSL7pjIXV7Z9C2trZ2xLrU/fcU0O
Lw8X1oxGr0FzEPlPESTDu4Jt31rD2nkbUtVuTFdPtKVPh9q2rSQ3nRLlbEzc
jKupqUiVfqVEwLM3R2wDTj0oH9dWheKnd3AxPhZJV9Px7LUKx0J0XmjKhblc
nIBCEf7+EX1FfVq9T7PcM6zEGZ8u4Hb3xTm2SUItxratxsNfbaGnw7bnH7/x
/c6acaWvY+aNoQui6nI+1fU9Xx9g/nNCW8qW9WjKz8xBd04b6HaehZP1rF/d
EimPmQUTUdypblfxPnXzw8eL23/h5NHjOPP3M5QqnK/VKHmehUJVc4Gfh0fp
D/BSagGoKs7Cg8e5eCv9mdVvkPs0GyWK9J5/CYE/HEbB2yi4tDeF3fpUiNuw
06+we3x3TDuYV/tvhI+xaWQPzIxWkL1WXYLnWYUq4x35eY+Q/uClZN1invXh
DvqgRm7BU0E58jMfIiOv/IONUFWErCe5KK+1+PBRkJmJV7V+IcDzmCWwd1yK
sFhRL/DTSIg7hAB7H5xg1dqtgf1VFNHsMtLI2z8Z5o7h2tMbq5moLHiIlNPR
iE5KwcN8BU9OdeevGOYZn/UAj3PfQlbtcvE0u0Ths5x/KRA/HC7A2ygXtDe1
w/pUSUwo/Wo3xnefhoO19lSEeLxpJHrMjFaQM6r+WkHnh8NBnxLXpxKU5yPz
YQbyyj8Y1FVFWXiSW177mc8vQGbmq9pzVfAcMUvs4bg0DLGnRXMyAXGHAmDv
c4Jdz0h1axYz9ynz72TERx3EweNn8Hd2Wa2x1ldGfkEmMl8pkF1dGek87J9s
Dsdw5TWjmxrhszBMNDHCuJ2ZcnZvBW6vGwrD3t6I02zDKnVGh2dhE2FiNA47
M+X7j93GuqGG6O0dp+F+WorRnj4d6tq2xYiYpA8dHR7G7HxRu6/B89/xtZ4O
dDpOlYl7Fb46h3WuTpjp/xN2hP+JjYsdYGnSA2MCTuGpogWsgrEX9Ln4dPnN
OnIbanoj6xjCKYJtzk8VLi/sDW4H9nFNLcm2FeYwa7yovhy3H1bXVT+gOr2e
fqfIFnyKOxfj2fme4hhxU3DN/VBXqWe1fc/KM8x/PujC7c7m3RCdq52YKToj
4+AT/0uqewG0Mui8MNjXrDtDFPWE/pgpe4S7j8pQde0HWHX1wun3k68Y+yYa
iGPVakOj5Iwv+n9Td6/aOilnbBQTCtYr687nqhvGJj/hjp6UTq1zDpU9NmWo
RIJXf/hq0qdtbhmr0hHypS1W32ymQAZCLcoe3cWjsipc+8EKXb2k1vzifZho
0Ac/XKv9wKBLzsC3/zd19uhiQ3mMG0woa/VrsyiCsclPuPdk7BH580XRXjDL
9bYyAV79faFZtWteGavSQ/Cl7WpojdrRJTg1ywwcBfXRxb9+ydhQjP1psfBy
s9gHdMkpzDLjKKiVLf4tXu4eD32uhVytmMZBm/p0qGfb3kPwIFGNCUX1Qphn
R5g9DHR0YTLj2IfcPWEWds+Yhm3/8mXfe9INPTh66L/iem1f/O1BTOFx6+6z
Ju5X1E6SR5bJ9nBRgJQAK3D1XRDF6la3NNv2NWLcutSM96Lq8RZHqO13Mo4n
zq1zhdNMf/y0I5yd78k8gaJc9MH9tK68qHr4nlWXmf8Woje3A5t3g361D5M6
MHJRg7Cu7sY9rYuamkqi89y24/fUu4dm60Wyd2M0af+HWIY3sXDvYoTJB/IV
/wldiMT5X2Jq2NMG+X5V15bAQtRzJEl7Vpiqwlco0mBeU/PKWIl/tzrim9XX
653XTWgkxLWrjDBp/4eaVm9i3dHFaDIOKMlLKUycjy+nhuFpg5ZwxkdaYiHu
OaI9aleFwldFGqzT2MwyVv6LrY7fYPV17dE6uuAAJjM2ADVCSUya4DqWWnKh
29Ubp5t82DQKDkxGBx0KIzYp7t0lyfnTRVfv0428lmlbnw41bNuqa/ihDwc6
bZ1wQP58gc7FngmG0OFaIyDlw6cIn23DKEMjDFiUJImpeIeoDllfZj509sJp
+S/lR2OGIRdWdfWL4iditpmuerUBGN29tLAXuEZuiGWhuy3Rtq1M+xH9KB3m
2n6v8hxIVMdWLb9T1Jt49wxM2/av3Dypw/fEWxycwhP391OZ010f31PAzBFx
3pU+izczvtD2r9FWRwcdHfd+hHEgNf32xHlyM6FmqfLWD52PMIf26Pt+378S
D7fbwXx4CG6pWisq/8Met2+x7ko96x8zvI3xRO9+i3Cu2Z8HjUfzycisTwn+
cPA6jKyWsYR/VND5YXBoL1V3vvIhttuZY3jILRX2SCX+2+OGb9ddqVWDmD1v
EePZG/0W1dWbuCXTjDLSeUjwd4DX4SytOsOviPdAJ9024E2KgELzSJiBjV9Q
4r7Jy25ocLOG3egQ79GJscd5mBSh2HiT1PVvA67VMjTq8LSwTwdb21ZSd5YL
jvl8XJDbP69+tBEjeLroaP+nTK4ZXXgSnj2NYOUbJ7umvOvdwZuE/fLfWXUB
88y5MPM5ozJPQpC2Uhwv1NlLNl6Irq5WUd+nEgkeJuD2ltTpU00LtW0Zv3Gv
oxF0ddph/G4FeXE1iOJd1PE7JbWkDGE0YBGSSuQuhirfk3niRM8wZHSrjh7h
9fE9qy4x/y1EL64Ri/eK8jIZ3eN8Av9kVtHDrQ6RzliL6mlwesH/kjbkrGgR
ohilzub42m0R1u0Mwx9BnnCZuwt/y891RQiykbQ3rnbdb0LzU/0QMXvPI1eb
DCbCe0QxSp3Nv4bbonXYGfYHgjxdMHfX36hb7QTITtqLOKJ0Wkn1wxjsPZ+r
VX7Kux49VBtdGLnFKbEvX2P/JB7a6PAw4c+CJh6eqG8XYxfrGsEtTsnz+fV+
TOK1gQ5vAv5szKQVbezTwdK2fVf3VNSj77qMLfkW5+d/Am67kdhwn11MG118
DDM66YKy+Qm1SnfX9FhV6vdK3oTn20dBj7mO0mfHEKTjl+krlddfp4sQ7qAH
6quteFbXEteCbduKqz8wNqkOqM9+RJqSayHqt6mO3ymKdznp2RNGVr6Ik9/M
UuV7ogoX5pmDa+aDMyrM43r5npUJzH8eMOH2Vv7Bkk9BUfRMdNHVQbsxv2tR
PZImRtQX8VOuuCekdZ35YB8Xohgly66eSGAmX9XrfJQQV45AaGREMUqW6OqZ
wKz5VXidX9LAOi4EgiqqcMm/FziMr9LFJ0nJXCvH4am89zWnmnZ4l+Dfi8P4
Kl3gk6REE8oPYypPVL/XBiH3G88T1NY+HWxsW9F9vrpYFPs4Ryb3S3D/Vww3
MMKoTel11u2SUIl/Qmyhz/sU85IU5SWIzsFMQfUPxG2lxlQl8x4T6FLDsP7R
O8OTRt4RL7hsV9FLWtwDk0JXUe1wlWNs4bYt/QoHp5lCV7czXI8pzv0Qxedp
wu8Uf50q31NUu2XDcFCMH6PkWBP19T3ponAUhTtAj/pK9QCrH2LDF22hQ/XD
ihtaE5zcDFRJ8rVEOcgD17Gop/GRQPNxO2gQ2o3fhZfkmhAITQLNv42gQe0w
ftdLLdt/J7ROKpHgaSKub9pVaX1Tvji/VqcNF58uu9HEw0uAp6hns25XzP1L
iYXKF9We0hHH7zdejJoW9+lgYduKqEpbhf6GI7Hl3bnr25sIsu2E/gsSFfdE
q/1FKLm4DIONrfB95BMlvg2N/DB76BtOxoFihW/Au7wTjtQ+ftXjvfD6fjtU
tU+lC/fB0cAQkw/UkbvdCmxbkQ85jJnTejbrcFfRha66qgG/U0RdvqckRtSU
6o9Apc5n/XxP0VmMKP+L6jpH5QjfJM1BDw4H3d1jUKRNetcMCO6swefcxt+X
aTkIkRX7MwKWr8CKZT8gYPdNkn9NIDQ2wizE/hyA5StWYNkPAdh9k2gdobHh
I2aWEeOH6KKbr3Jf5ZiLAfMeDiyWXGvi4cVglhHjh+h2g69SX+UYXAyY93As
sERBnTyNoOV9Ouq0bUXQr3Et+BsMclqLsLD18B49Aq5bryGf1bkD46dcC8bo
z+wQnJyvsme08PEGDOeJ+kAo9xOEzw5ipuUncPwpAvs2LMJM7424UochWpHg
ic76X2N7luoBtw7bthzXl/cDpWuCKRGKaptXNdDvFMHG95TkT9rri3xEZc5n
fXxPGoX7HLHP0QCGkw8oH6KoVqltW+h2HIdQEttcU3dHj1mLJT2cm9pbuXTp
ErN2hJEXeWnF6//9v//XxBqgCj4KM//DvfR0pKv7uncP/2UVKbS/SktLm/06
kxd5vXv9n//zf5pcsyR8OFdRHgNWgSPTeOI46eY7V1ERA1ZxBNNEMWCNeK6i
/X066rJt31GN4icpSL6SjtzajbuUQKP4yjpMtFuEU1nvLFohclKuIkORgSvM
wJaRBujtf1F1rFb5C9y9fAFX779iUU+4Aufn9UR7u9DavWalaUW2Lf36DHw/
4YJr6Y9kBbXE6+93iuqAX2Pte0pykHji2Dtl90l937OCWXc6w7OzPr7enqXs
U/E8bCKMdA0x/Bd1zopaM4ze7R6PdjptwO23GnWVKtc0u3fvxqxZs8iLvLTi
9eLFi6ZVABXQBcfg/VkPmHfvju7qvszN0bO/L2IU2Bb/9//+32a/zuRFXu9e
O3fubHrlEiPqryfJV+nkmaDEtpTULRX3P/ypqfNVLmOhOF+lEzwTlFi+4p4e
oriIwfipUeIiWkafjrps23p+KoouB2OG+x+4/Ua6V8cz/D5zUa3c7nd/U3DE
BV16zsVZTR0Nv4mHV3dzuMeUqPDDWptty1z7xDmwoHgYHPS3gnlXH79TlJ9y
Besm2rH3PZnfZWwZCYPe/rioyvlUx/esOI95PdujZ3s7hCpxPumSBHj34MLA
NgS3tVXpmoPXMXDroos2oroRF8mFIRAIBEJrR4hH64eJe2C3mxGt2Mag87Fn
vF7z1AETPsL6YRTz3e0wI1rxc5nO34Pxeo1XB6zl9Omoy7ZV//MKL/6I4eb9
4eQzD/PmvXv5wuf7UegzbgdeKLvc1Q+xeVQ3OOzJUb1nzwohnu4Yi+7jQlXW
FW2Vti1dgrPzLEG1+wqbH2igY3TRZQTPcMcft9+o4XuK9gyPwKVLT8zVkPP5
Jt4L3c3dYe4eo6S+ZSmSF1lDr/1I/JZOqsvIUom0H/uB0tFF5+9Pqqi3RyAQ
CARC64Cf5AMz3TbQmxD2oeevNO/qBnOtENDk/VX4SPIxg24bPUwIK1S4p179
4BfYivurBDRCf5UW1qdDg7atMCcME4100aZNGwUvDsznnVd5dsFPDYSN9Vwk
1r/hkxi6MBae1sMQfFuVzdqKbds317BykAE6jt6KhtxSuvAifhxujv5OPlJ+
J0vfU9QXfPModHPYg5yGOp/Cp9gxtjvGhT5VEqdXitKLi2Gt1wkTQh+T2rwK
oHP3wpHRTZ1247FbZVBk64MuuobwyFQl/dHKkPrHdxhpMwoz119UI3eLLXxc
3zAVo4b2h1VvW6xqrPxIVlSh4NFNXIg7idhzKfjvVYWG8ii1SUaCdkCj6Fo4
IlOVaF3qH/hupA1GzVyPi5pXOmZKXseGqaMwtL8Vetuu0vznq0FVwSPcvBCH
k7HnkPLfK1RoSlwtklFboQsj4dxBB9zP1+COomODyjPwMdMFp7sPkpq8VQWN
wkhndNDh4vM1dxTmklaeEflaHHT3SVLQd7uBtMQ+HRqybRsOH/e2jscw30TU
+7iLzkOMly0cQx+q9Itau21b9e82jDXuiK823q9fbJswB2ETjRifX5Hfyc73
ZJxPBNpYY25i/Xt8i/U51hPWw4Ihcj0VeZVvmHu5uK8+erudgBaVBtcyKnD1
B2twdSh89mNaK4h3ZInwBY5M7w7eV1uhvMRGFdJDbMHjmGPOmcbo+FzTk0x/
IsI1eY4vzMa5I8nIZeF6Cl8mIWjWLARsPYqz164j+dgvmGJlBpvZ+/FfRd1/
XzeNJCOhRSJ8cQTTu/Pw1dYs5f2J00Ngy2OeI3PONE6f9Zo9c/2J4Rr8UCGy
zx1BMjulQ1LQLMwK2IqjZ6/hevIx/DLFCmY2s7FfM0rXSDK2JkoQ694VnLZ2
2KXg4KA6PRiDKArWy643T6+fkli4d+Wgrd0uBeca1UgPHgSKssay65oeXcvt
09Fg21ZTML5G4qIxmLI9HeprcznubHKC3bJzqn2dNxc/AtuWxsuEVZjmsgmp
zXhD+fe2YvwwXyTW036h82LgZeuI0IfKgs1KkPijE5xmbUNaozzwWg/0q4OY
ZqoL3c6uONZyC96pQTUywrzwuRlH3A9WVTlAOj8SzkYcGE2OaIT68sU4OKUd
qGG/4bEmnwn8WLhZeeN0nY+xMiR4maP7mPVIkdKRN7Hu6KzLg+3P9zVQH66R
ZCS0PKozEOb1Ocw4lEpfRZQrEOlsBI7RZEQ0RlOH4oOY0o7CsN8ea/BD+Yh1
s4J33UqHsgQvmHcfg/WySgf3zrrg2f4MjaRKN4qMrQthjshvbovPl12FTFo2
M/9iPXtBr888/PW6uZ6HQuQcmY7ubT/HsquySeN0fiw8e+mhz7y/oPHhteg+
Hdph20qGUoiUP/fhaqmaf1ZyCXv3pinJZ3j/LpQk/khs2yaDRl7iIoyZsh3p
6jqf5XewyckOy85pX83vlokA938dBn0dPdisu9vqz1aq7m+Hz8oYhDrz6vRV
RPb8Wd8e4PBGYKOmjW1+EmabUbAKSNHsGS4/Bm6WbHwVSa0XTgcH/CkVkClI
XQFrrqp6nuqMpZFkJLQwqnB/uw9WxoTCmVeHr8JQdtYXPTg8jNiooqdzPeEn
zYYZZYWAFE3OSD5i3CxZ+SqvT8yEKacDHP6UysEVpGKFNRe6XXygrEytWqNp
FBlbG4zNl7od31pbYvzaGNwvKENpTioiF49E7wFeiPivmeOf6BKkbv8W1pbj
sTbmPgrKSpGTGonFI3tjgFcEGmN4raNPB4GgaWgUpvyJfWo5n8z6cmkv9qap
quNGUJvy61jej4KuyRREaH0yXQMoT8Mv3sG49qYcR6ay8VUYM+JuEAZQXFgv
u1Gn7V728jkKWNoaoh6m1pQpPOI0/NBh7auIBlGKwtfS3imNnFA76OuaYvpR
RXsBZXj5vIC1D9NoMhJaFOVpv8A7+BrelB/BVBa+CqN0CBpAgWu9DDfqVjo8
Z6t0jMcs7hts6gHNTkn2vopoDKWFr2X2hOicUNjp68J0+lHFsR9aIWMrpSIH
KVHbsHbZYixZGYLQU3eQr0UbdhU5KYjathbLFi/BypBQnLqT3zj7ia2oTweB
QGit0Hh9xhefcLmw9E+GxkqVaxWluLRmNjbeEZ1tV7D2VUS17XbaGYJj5o5Y
FW41XXQULsZtMSFM1sYvS16Cvl1dcFimNogQTzd/CcpgIvZqOo9DHV9FBhql
d/+Hab2MMdg/TkG+C42ioy4wbjsBYTJjLkPykr7o6nIYsuVPGlFGQsuh9BLW
zN4Iidqx9FWY3z7baQdDjhncVSsdjroYo+2EMFkbvywZS/p2hcthuZxI4VNs
/pKCwcS99c99VYg6voosdOld/G9aLxgP9keconwXrZGR0HppbX06CARCq4V5
JibOsQDFG4ygv1tarGpd0Cg4vQxzdj6oiUVSw1cR9bA9/h1MOe3hEKa8P25F
gic6U59hlUxjzSok+/UA1csfl2Q2UotwYLIhqOEbNJ/HobavUon0g6ux0GcK
hnYzQT+PcKSXKpJS0neV+myVbO/QqmT49aDQy/+S7DOuMWUktAzoApxeNgc7
3xXnYe2riPp3Hcd3phy0dwhTXje1IgGenSl8tuoWZKekH3pQveB/SdbqoosO
YLIhheEbNB1bpr6vUpl+EKsX+mDK0G4w6eeB8PRSxWuL1shIaK20yj4dBAKh
1UKXnMU8SwrtvtrczLX/NIvwRRT850fg2fuHtxq+Cv8xIj1sYdZBF3pDf8a/
CnNfBbgRYAXKbDYSpdf66n+wdiAFI9do2bOqikR4dxHlcdyoncchLEDavjXw
mzcfvh4ucHZZgM2nn6BWRyJhOQpzc5CdnS37ygjHtN4zcCAzu9bvcnKLVddG
rczCqbmfwdDcHhtT5U7XBDcQYEXBbHYiZEVci4GUEVyj5d6vQkZhQRr2rfHD
vPm+8HBxhsuCzTj9RFMNfwnagRAvovwxP+LZB5uZta/Cx+NID9iadYCu3lD8
rFjpmCkZACvKDLNllQ7/rB0IysgVtaekN7pQinpmCFGQtg9r/OZhvq8HXJxd
sGDzadSekkKUF+YiR17nsjMQPq03ZhzIrK2PObkoVq10yDo1F58ZmsN+Y2qt
M+2ml5HwcdGK+3QQCIRWy5trKzHIoCNGb33QOvKhqzMR7rsEJ19J2wvsfBW6
NBWbHAbAfustpIUMAcW1wKLLCjaehI+xYTgFwymRKJb++5wdGMNri3G7Xsrs
mQpuLhfncXjGyxeWqMKdECe4Rz6rufZCFF5ZgxEdTTAu9ImMfVd5NRh2tkNg
Y2Mj+xrcBya8TrAcbFPrd0NsJ2HjLdV3lS6OwnQTXXAtF+Oy1PCEjzdgOGWI
KZEyEiJnxxjw2o7DLrniiUplrLqDECd3RD6rGYewEFfWjEBHk3EIfUJ2glsL
1Znh8F1yErJqx8JXoUuRuskBA+y34lZaCIZQXFgsuqygJ7UQjzcMB2U4BbJT
Mgc7xvDQdtwuuXqeAtxcLsrj8ETtKRkCJ/dIfJiSV7BmREeYjAvFE1mlQ7Cd
LYbI65zNYPQx4aGT5eDa+jjEFpM23lJ9sehiRE03gS7XEoulla45ZCR8VLT2
Ph0EAqG1UoV/t42FccevsPF+y49crUpehEGD7OA8dSqmvn85YWhXDnQ7DcAE
5t8uiw4hU+55LXx5BgHDemJE0DVxbUg6ZzcmtOPA1PU45NvS0gV7MdFAFHch
60+URrmgIzUEIf9J7wsLkbFpBCgDR+yTb5oszMbvo/Wg77hPqg5LGaJdO4L6
YgM7m4JlDBj95i4O/RSI0KtyvZGrH+JXcc9ma6xIfff0olGwdyIMqOHYIDOI
UkS5MGMbEgIZEVXIKMz+HaP19OG4r+jD95ZFw7UjhS+Y60doDVQhedEgDLJz
ltI55uU0FF05uug0YALzbxcsOpQp+2fClzgTMAw9RwThmkTpsHtCO3BMXXG8
ttJh70QDcYyh7JSMggszl4aE/Cdbc1uYgU0jKBgwulUol1eV/fto6Okzc1Wq
+FFZtCuju1/IzXdlsIwBo9/g7qGfEBh6VW4M1Xj4qy2oNlxYr0j9YDNqlYyE
VsdH0aeDQCC0WuiXSFg1DS6bUltnnl31fYTYUErPVfiPI+FmbYwBC89I9ax/
jVNuXcAxtMPO57J/VB7njk7cHvBLlr5afJzzNQfVayEuMz9+m7QWIRerxHkc
EU6GNb6HEDkRgdh+74PFUZaZhlvZUpui9AvsHMNDe6cIsGrlzdJX4cfOgpGO
DgycD8nGnQhuYXU/LnSoEdj0vhlYOeLcO4Hbww+yIp6DrzmFXgsvM/PkLZLW
hkAkomoZy5CZdguyIu7EGF57OEXksxCQ0FKpvh8CG0rJuYoo1tLNGsYDFuKM
1ER/fcoNXTiGsNv5XPZvyuPg3omLHn7JkJ2SvjCnemGhROmwNuSi+Od0UQSc
DCX+sFCYg4jA7R/+qCwTabeypXq30Xixcwx47Z0QwU7p2Pkq/FjMMtKBjoEz
DskqHW6t7ifuyTtiU8YHObVKRkLrgvTpIBAIBK2mJo+EGrFRrjcvjdK0zbDv
po8+7seQLRcmX3k9AJ9yKQxc+4/UebkA15dagssxh+/5yvef8zolGCONOOA5
hKOILkH0Aj9Ei/aGxX6SHszmnEWlMAt/eK/EVaX5jDTy4mfDqts4/H6PZSwx
S19F+Gw37C3GYctd2YB1ftpqDKA46Dr9yIecZsF1LLXkgmPuiw8ivkZK8EgY
cXhwCC8CXRKNBX7RkjMndWSk8xA/2wrdxv0OtiISWiaS3CbGHt+YIeN30KVp
2GzfDfp93HGsttIh4FMuqIFr8Y9UkIrg+lJYcjkw9z2PD1MyBcEjjcDhOSC8
iLHFohfAL1oSPCX2k/TMMOdsJYRZf8B75VWl46Tz4jHbqhvG/X6PZX1ulr6K
8Bl221tg3Ja7svln/DSsHkCB03U6jkgVEtAuGQkEAoFAIDQ6wmwcX+4Kl0nD
YdHJGMamVvhysgtcV8VIzsAFKYxNrgdz5zA8UvQAFz7FrglG4HZzRdS7QHzh
I6wfRoFnbo2Bo7yxfvcebA1aCL+fTiL1+Fz0tZ6GoJD5mB/6ziYQ4MEuJ1jY
Mu9d7Yvl0dlKYverkRO3GHZjF+DoIzUaprKuAyZE7tlgzJrqhVU7jiIx+QIS
9q/BJMZ+GeSxB3el9tqEj9ZjGMWDufVAjPJej917tiJooR9+OpmK43P7wnpa
EELmz0foe2eDpYzVOYhbbIexC45CHREJLQth9nEsd3XBpOEW6GRsDFOrLzHZ
xRWrYl5CNFdSGF9fz9wZYYqVDk93TYARtxtco17VxA0K8Wj9MFA8c1gPHAXv
9buxZ2sQFvr9hJOpxzG3rzWmBYVg/vzQD/6v4AF2OVnAlpm/q32XIzpbidbl
xGGx3VgsOPoI7Kck+zpgwtyzCJ41FV6rduBoYjIuJOzHmkmMrz7IA3uklU7r
ZCQQCAQCgdD8VKPkeRYKVSUZ8vPwKP0BXtY85On8cDjoUxi55SkE5fnIfJiB
vPIPNkJVURae5JbXqkfKL8hE5qvaP5d8aCluh/rCIygeWZXiL0HyyUuQT29R
PD41axZXlyDz72TERx3EweNn8Hd2mdyYaOSHO0CfGoktTwUoz8/Ew4w8fBCx
CkVZT5BbXntwqmSkS28j1NcDQfFZkIiYjJOXClkOmtCaqC55jizVSoe8R+l4
8EHpEO6gD2rkFjwVlCM/8yEy8so/+MNVRch6kovaU5KPgsxMvFIwV8VnqrdD
4esRhHiJ0iE/+SQusVM6NWsWM+tM5t9Ijo/CwYPHcebvbJTJf43WyUggEAgE
AqElUh7jBhPKGivTNFRFRfAcMUvs4bg0DLGnT+P06QTEHQqAvc8JsGpDXZkA
r/6+OKuxwI5yxg4zAWW9EpoTMQZL7B2xNCyWkY+RMSEOhwLs4XOCNNomsKCc
8cdNKFivTNNQ7SIBnscsgb3jUoTFnhbPyYS4Qwiw9wG7KVmJBK/+8NWc0mmh
jAQCgUAgEFoeVbi2xELcVyVJEz206DyccO8JSqcN2rSRflGwCfkXirtM1B5T
4asizdWfrLqGJRaivipJCurGqg+ddwLuPSnotJGTkbJBiJI+GgSCNFXXlsBC
1HNEM0qHvBPu6EnpyOlcG1A2IUr6KSkYU+ErFGmw6Ks2ykggEAgEAqGl8RYx
nr3Rb9E5tNpSKm9j4Nm7Hxada7USEloYb2M80bvfIrTmKfkxyEggEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoGgiPbt20NXV1f8fwKBQCAQCAQCgUBobvr161er
J5XoNWDAgOYeGoFAIBAIBAKBQPiIUeSnvHsRCAQCgUAgEAgEQnMgivlS5auI
fk8gEAgEAoFAIBAITY2Ojo5KX0X0ewKBQCAQCAQCgUBoaoivQiAQCAQCgUAg
ELQRJycnlb6Ks7Nzcw+RQCAQCAQCgUAgfKQoO1shZyoEAoFAIBAIBAKhuene
vbuMnyL6N4FAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAg
EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIGiK77//XmFPx4kTJzbK94k+V9H3nTt3rlG+j0AgEForJSUlCtfTYcOG
NffQCAQCoUn5999/Fa6HotfNmzc1/n2izyTrb9Pw/PlzGBsbN4n/IPo8Rd8j
8pcIBAKBoB4nTpxQ+mwWre0EAoHwMbF27dom8x9En6nou0Q+E0HzbN26VeH1
trS01Nh3iPb/RJ8n/x0iP0n0OwKBQCCoh7JnpeglemYTCATCx4TInlS2/y7a
29EUe/fuVfgdInua0Hgoe+Zp6ror84dE95tAIBAI6qEq3uHdPhCBQCB8bCiL
4dHU3rgyf0i0H0/23hsXZXF3mri3oliEpsyJIRAIhNaOslgHkgdIIBA+dpTl
Rmti/33hwoVNlhPz/9u7txXHdSAKoP//1ecghkCT1HYs+RLbWgvyMsw0A26s
qLSrxKe09rXnskX6nZHpAxjzXter5qToBQRmtNSLvaWXL9X1vWvPs5TzG90v
pt5PmT6AMdV7teVpq55APfbAjFLvwZZMj77ra0h7i5Fnu5TpA2BMdYbSzqmr
bIKeQGBW1d5itP6e9j579uyzXsps9T6PlCmT6QMYU/X/veZxVj2lakPArFJm
q/e9mDJl+q5/J/XC98w4SDNqtva+AMysmpX59+ykWk/Vh4BZpV74njPndG+6
jO1vpbOutX0m1dmMTB/ANt96UqrzbDUiYFapH2Htd9J0NqPv+vfS3Y1r9pGp
58X8TIBx1Zr5nkGozrTViYCZpbsb19Rxqu/Cr9wtvzcymy3tX2X6ALapsgxV
H2G1tur/BGY2cn9GyhjJ1V5Lyuil51StpW3vItMHMC7Vgarzkmp9VQcEZpb6
qFMtPfVut5wt15JmH1TrnkwfwDGqbG3KL6Q1Vs0ImFmaT1v1KOi7vpeU83uf
odD2L2p5APur3q9LPYDV31cPBGaWerHf59xW89/1XV9fte793V+m/cxSDhCA
76pzkvb+XVKdw3z7NwBPl/YhrwxQ2s8s9WpzDSnn155tylGr4QFsNzKHuL2X
1QUBPlW92K/6e9Xvp+/6Pqr1sj2/6s977o0EIKtqfGvOrKv1WG0QmF3qxW7f
Z6s/77k3kt9K5ydqdwDHqPIKbe8y+m/bR30QmF2aR6zv+v7S2qduB7C/6myk
Z7aiGiFArerF1nf9DOk+nb95PwC2ST0nPeci1Z1Xa89lAJ4s3bUxUhfiWpbO
VtxPD7CPar5ibx4hzUVx7zLA8tmK9+Q9pVluni3Avqp37Uh+q/o53+aIATxd
um9D/f3e0p2f7/kCOTCAcek8ZOTdmmZwek8Ds0qzwPT33VuV62vPuXrWMn4A
46o+k9G5JdVdku3T7osEmFHVe12dQavr3EfKfrU9SZr7ZnYCQL80H37L3qLK
ZJvFCcyoyn697nus3r3m295Dugeyranp2VoHAfq1Pcnetb3qZ7aPu1aAmaTv
rK88UOp1cG/gtaWZbn8zfOlsRc4PoM/SXPi9P21dBphFyn69akHpXFsv9nWl
7Fd1ZpJyfup2AOuk3pKjPu5aAWaR5n69n5mkc2i1nWtKZ2FVL0o6f5HzA1gn
nVEf+ZFtAJ6utxclnW/rxb6WtPdY2le2Z24tBBjz7f6qIz7qScDTVXuPpexP
mhuvF/s6UvbrW39n2rfK+QEsazWdam1sa+xen7QX8n4Gniplv77dr5GyRXqx
r2HLHISUYZDzA8iqO1X2ruGtmZUC8BRbZtWmPnu92L+X1rJWk1sr1e7k/AA+
tTXxrD1E9X7WYw88Ueo7ad9110h99rKzv5OyX+3Ts4dM+x05P4BPKaNwRO3O
/b3ADNJ7tZ1h90j7Hb3Yv5GyX98yfZXUZz/yswCe7Mx75dNc5N71G+CqUvZr
5F7d1Ge/9Y5e+qWzkNFswNLviZwfwD9pHTyyhyTNxLHuAk+QzkJapmtEquXr
xT7PUvZrbaavkrIGPb0vAE+W1sAj9w0pgz26jgNcRcp+bfnumfrst35PZr20
p9ijdyjtgeT8AP7rup9sL2ndVUcC7mxpT7G1Jy/VePRiH+/oHF7KlskbALP7
5flGNSO5fWR0gbs6ulc6Zcv0Yh+r6uncOyudfnfk/ICZpXfjGXWcVEfyXgbu
KN2nu+d95Ev1fXWeY5zVT5L67OX8gFmleVxnzu131wrwBGf2k6QeQxna/aW9
4R6ZvkraF1kXgRmld+KZvXxX+D8AbJXOqI+o/Szti8wn2VfKfh15/p/67OX8
gNlU78O2/p3pCmc7AFuk7NeRuazUa6gXGwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAePc/
yGjFQA==
     "], {{0, 185.25}, {608.25, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96, 96}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{608.25, 185.25},
   PlotRange->{{0, 608.25}, {0, 185.25}}]], "Input",ExpressionUUID->
  "0d22aec5-58d9-4a6b-a5ae-228e4ad434fc"],
 "\nPara obter as frequ\[EHat]ncias naturais com a solu\[CCedilla]\[ATilde]o \
proposta, utiliza-se a equa\[CCedilla]\[ATilde]o din\[AHat]mica do sistema \
equivalente a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], ".", 
         RowBox[{"[", 
           OverscriptBox[
            StyleBox["x", "TI"], "\:0308"], "]"}], "+", 
         StyleBox["K", "TI"], 
         RowBox[{"[", 
           StyleBox["x", "TI"], "]"}], "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "M.[\\ddot{x}] + K[x] = 0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f9b2f642-c498-47dc-9a8c-78c812ba1d2d"],
 ". Contudo, note que por termos isolado o vetor de estados derivado (F), a \
equa\[CCedilla]\[ATilde]o equivalente em verdade \[EAcute]  onde ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"[", 
           OverscriptBox[
            StyleBox["x", "TI"], "\:0308"], "]"}], "+", 
         SuperscriptBox[
          StyleBox["A", "TI"], "*"], 
         RowBox[{"[", 
           StyleBox["x", "TI"], "]"}], "\[LongEqual]", "0", ","}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "[\\ddot{x}] + A^{*}[x] = 0,", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aa039fab-144a-4104-8719-2657f45bb114"],
 " onde  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["A", "TI"], "*"], TraditionalForm], "errors" -> {}, "input" -> 
     "A^{*}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2c312786-763b-4e6e-a4b8-4a970b587a04"],
 " representa os elementos {{31, 32}, {41, 42}} da matriz A.\nDesse modo, ao \
realizar a multiplica\[CCedilla]\[ATilde]o de A por X, toma-se apenas a equa\
\[CCedilla]\[ATilde]o matricial que envolve os dois \[UAcute]ltimos elementos \
de F (2x1) e os dois \[UAcute]ltimos de AX (2x1) , visto que os dois \
primeiros elementos n\[ATilde]o trazem informa\[CCedilla]\[ATilde]o alguma. \
Assim, para obter os autovalores do sistema, basta isolar a matriz A \
equivalente a este sistema de segunda ordem e tirar seus autovalores, os \
quais ser\[ATilde]o iguais \[AGrave] ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"-", 
         SuperscriptBox["\[Omega]", "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "-\\omega^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "96f07dae-a778-46ff-96c1-77e0fed2ee0e"],
 " pela natureza da solu\[CCedilla]\[ATilde]o exponencial complexa proposta.\n"
}], "Text",
 CellChangeTimes->{{3.9052887281300774`*^9, 3.9052887402528305`*^9}, {
   3.9052888606189084`*^9, 3.9052888642010174`*^9}, {3.90528994608165*^9, 
   3.9052899505324583`*^9}, {3.905290549513173*^9, 3.905290727710786*^9}, {
   3.9052910822922106`*^9, 3.9052910847054853`*^9}, {3.905325774570442*^9, 
   3.905325795972417*^9}, {3.9053259811648226`*^9, 3.9053262378734455`*^9}, {
   3.905326290811527*^9, 3.9053263002696037`*^9}, {3.9056204022537966`*^9, 
   3.90562040472416*^9}, 3.905620631761095*^9, {3.905779115745549*^9, 
   3.9057791863242*^9}, {3.905779220576467*^9, 3.90577925991193*^9}, 
   3.9057792908218355`*^9, {3.9057793285691347`*^9, 3.9057794671004267`*^9}, {
   3.905779513570448*^9, 
   3.905779534387853*^9}},ExpressionUUID->"0e34c1a0-2ab2-4e82-858d-\
671c4254445e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Din", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"Din", " ", "//", "MatrixForm"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Eigenvalues", "[", "Din", "]"}]}], "//", "FullSimplify"}], " ", "//",
   "MatrixForm"}]}], "Code",
 CellChangeTimes->{{3.905288755774541*^9, 3.90528880017787*^9}, {
   3.9052907301451902`*^9, 3.9052910081011333`*^9}, {3.905291093508063*^9, 
   3.905291101552664*^9}, {3.90529113790047*^9, 3.9052912297269025`*^9}, 
   3.905323355833155*^9, {3.90532592712295*^9, 3.905325948150525*^9}, 
   3.9056921526967115`*^9, {3.9056930913067045`*^9, 3.9056931319124336`*^9}, {
   3.9056936115908136`*^9, 3.9056937485076685`*^9}, {3.9056940312761717`*^9, 
   3.9056940840372643`*^9}, {3.905694200658595*^9, 3.9056942105750027`*^9}, {
   3.9061207905863743`*^9, 3.9061208064622808`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"0e272b74-1aca-43e9-841c-ec7a44986a1f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{"4", "+", "\[Lambda]"}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Lambda]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"\[Lambda]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}]]}], 
          ")"}], " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"]}], 
        RowBox[{"3", "+", 
         RowBox[{"4", " ", "\[Lambda]"}]}]]},
      {
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{"4", "+", "\[Lambda]"}], ")"}]}], "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Lambda]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"\[Lambda]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}]]}], 
          ")"}], " ", 
         SubsuperscriptBox["\[Omega]", "p", "2"]}], 
        RowBox[{"3", "+", 
         RowBox[{"4", " ", "\[Lambda]"}]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9061207963842726`*^9},
 CellLabel->
  "Out[62]//MatrixForm=",ExpressionUUID->"eadf8284-2798-47aa-b255-\
8d4d1203f189"]
}, Open  ]],

Cell[TextData[{
 "A matriz acima expressa as frequ\[EHat]ncias naturais de 1\.ba modo ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        RowBox[{"(", 
          FractionBox[
           RowBox[{"3", 
             RowBox[{"(", 
               RowBox[{"\[Lambda]", 
                 RowBox[{"(", 
                   RowBox[{"\[Lambda]", "+", "4"}], ")"}], "-", 
                 SqrtBox[
                  RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "1"}], ")"}], "2"], "(", 
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "2"}], ")"}], "+", "4"}], 
                    ")"}]], "+", "2"}], ")"}], 
             SubsuperscriptBox["\[Omega]", 
              StyleBox["p", "TI"], "2"]}], 
           RowBox[{"4", "\[Lambda]", "+", "3"}]], ")"}], 
        FractionBox["1", "2"]], TraditionalForm], "errors" -> {}, "input" -> 
     "(\\frac{3 \\left(\\lambda  (\\lambda +4)-\\sqrt{(\\lambda +1)^2 \
(\\lambda  (\\lambda +2)+4)}+2\\right) \\omega _p^2}{4 \\lambda \
+3})^{\\frac{1}{2}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "682dba55-715c-4b80-a22b-11e9e8c547c2"],
 " e 2\.ba modo  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        RowBox[{"(", 
          FractionBox[
           RowBox[{"3", 
             RowBox[{"(", 
               RowBox[{"\[Lambda]", 
                 RowBox[{"(", 
                   RowBox[{"\[Lambda]", "+", "4"}], ")"}], "+", 
                 SqrtBox[
                  RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "1"}], ")"}], "2"], "(", 
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "2"}], ")"}], "+", "4"}], 
                    ")"}]], "+", "2"}], ")"}], 
             SubsuperscriptBox["\[Omega]", 
              StyleBox["p", "TI"], "2"]}], 
           RowBox[{"4", "\[Lambda]", "+", "3"}]], ")"}], 
        FractionBox["1", "2"]], TraditionalForm], "errors" -> {}, "input" -> 
     "(\\frac{3 \\left(\\lambda  (\\lambda +4)+\\sqrt{(\\lambda +1)^2 \
(\\lambda  (\\lambda +2)+4)}+2\\right) \\omega _p^2}{4 \\lambda \
+3})^{\\frac{1}{2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d4109dc5-8485-4394-b911-18c2eb823fd8"],
 " do sistema din\[AHat]mico modelado."
}], "Text",
 CellChangeTimes->{{3.9053262550763855`*^9, 3.9053263651953816`*^9}, 
   3.905332436633842*^9, {3.905779541082528*^9, 
   3.905779546493248*^9}},ExpressionUUID->"50eac79e-8d39-4fd5-97dd-\
37df40290047"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exportando aquivo .m do espa\[CCedilla]o de estados \
n\[ATilde]o-linearizado", "Section",
 CellChangeTimes->{{3.905620643806306*^9, 3.9056206553996763`*^9}, {
  3.905954682291772*^9, 3.9059546859026585`*^9}, {3.906111741205694*^9, 
  3.906111743210003*^9}},ExpressionUUID->"7e490e7f-83f5-4496-b4c2-\
f79c7695fee6"],

Cell["\<\
Para exportar o linearizado, basta substituir o argumento da 4 linha da \
terceira c\[EAcute]lula de c\[OAcute]digo por:
WriteString[fileD, \
(#/.(({ii_}\[Rule]vv_):>(StringReplace[StringReplace[ToString @ StringForm[\
\[OpenCurlyDoubleQuote]    ``;\[CloseCurlyDoubleQuote], (vv /. crule \
//CForm)], csqrule], csorule]<>\[CloseCurlyDoubleQuote]\\n\
\[CloseCurlyDoubleQuote])))]&/@ (Normal@(Select[#,Not \
@(NumericQ[#])&]&@Association@Delete[ArrayRules@SparseArray[(\[DoubleStruckX]\
\[CloseCurlyQuote][t]/.Sollin[t](*Join[\[DoubleStruckR]\[DoubleStruckQ][t], \
EOM2[t]]*))], -1]));\
\>", "Text",
 CellChangeTimes->{{3.9061117693099356`*^9, 
  3.9061118105931435`*^9}},ExpressionUUID->"0847729e-c879-44c2-b8d7-\
e5391237e769"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{
    RowBox[{"Power", "[", 
     RowBox[{"a_", ",", "n_Integer"}], "]"}], ",", "CForm"}], "]"}], ":=", 
  RowBox[{"Distribute", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"Hold", "[", "a", "]"}], ",", "n"}], "]"}], ",", "Hold", ",", 
    "List", ",", "HoldForm", ",", "Times"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Power", "]"}], ";"}]}], "Code",
 CellChangeTimes->{3.9056206845942583`*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"1577ab40-3324-41aa-9b52-6f1fe4c621ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crule", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", " ", 
         RowBox[{"x", "/@", 
          RowBox[{"(", 
           RowBox[{"(", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "#"}], "]"}], ")"}], ")"}]}]}], "}"}], 
       "&"}], " ", "@", " ", 
      RowBox[{"\[DoubleStruckX]", "[", "t", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"csorule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Cos\>\"", "\[Rule]", "\"\<cos\>\""}], ",", " ", 
     RowBox[{"\"\<Sin\>\"", "\[Rule]", "\"\<sin\>\""}], ",", " ", 
     RowBox[{"\"\<Tan\>\"", "\[Rule]", "\"\<tan\>\""}], ",", " ", 
     RowBox[{"\"\<Sec\>\"", "\[Rule]", "\"\<sec\>\""}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"csqrule", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{3.9056206973854*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"a3ba0f8c-72a7-4d9a-bef5-731c3c97815f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fileD", " ", "=", " ", 
    RowBox[{"OpenWrite", "[", "\"\<ex01_esp.m\>\"", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"WriteString", "[", 
       RowBox[{"fileD", ",", " ", 
        RowBox[{"(", 
         RowBox[{"#", "/.", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", "ii_", "}"}], "\[Rule]", "vv_"}], ")"}], ":>", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{"ToString", " ", "@", " ", 
                   RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<dy(``) = ``;\>\"", ",", " ", "ii", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vv", " ", "/.", " ", "crule"}], " ", "//", 
                    "CForm"}], ")"}]}], "]"}]}], ",", " ", "csqrule"}], "]"}],
                 ",", " ", "csorule"}], "]"}], "<>", "\"\<\\n\>\""}], ")"}]}],
            ")"}]}], ")"}]}], "]"}], "&"}], "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Normal", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"Not", " ", "@", 
              RowBox[{"(", 
               RowBox[{"NumericQ", "[", "#", "]"}], ")"}]}], "&"}]}], "]"}], 
          "&"}], "@", 
         RowBox[{"Association", "@", 
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"ArrayRules", "@", 
             RowBox[{"SparseArray", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[DoubleStruckY]", "'"}], "[", "t", "]"}], "/.", 
                RowBox[{"EOM", "[", "t", "]"}]}], ")"}], "]"}]}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}], ")"}]}], ";"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"fileD", ",", " ", 
      RowBox[{"(", 
       RowBox[{"#", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", "ii_", "}"}], "\[Rule]", "vv_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"ToString", " ", "@", " ", 
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<    ``;\>\"", ",", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vv", " ", "/.", " ", "crule"}], " ", "//", 
                    "CForm"}], ")"}]}], "]"}]}], ",", " ", "csqrule"}], "]"}],
               ",", " ", "csorule"}], "]"}], "<>", "\"\<\\n\>\""}], ")"}]}], 
         ")"}]}], ")"}]}], "]"}], "&"}], "/@", " ", 
   RowBox[{"(", 
    RowBox[{"Normal", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"Not", " ", "@", 
            RowBox[{"(", 
             RowBox[{"NumericQ", "[", "#", "]"}], ")"}]}], "&"}]}], "]"}], 
        "&"}], "@", 
       RowBox[{"Association", "@", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"ArrayRules", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[DoubleStruckX]", "'"}], "[", "t", "]"}], "/.", 
              RowBox[{"Sol", "[", "t", "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"\[DoubleStruckR]\[DoubleStruckQ]", "[", "t", "]"}], 
                ",", " ", 
                RowBox[{"EOM2", "[", "t", "]"}]}], "]"}], "*)"}], ")"}], 
            "]"}]}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"fileD", ",", " ", "\"\<\\n\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "fileD", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.9056207072099824`*^9, 3.9056207422729497`*^9}, {
  3.905620775087373*^9, 3.90562077811423*^9}, {3.905620842216877*^9, 
  3.905620844318428*^9}, {3.905620919014703*^9, 3.905620929135686*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"fa65f2d7-2f57-40a8-8e75-9c5311b022b7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1200., 612.75},
WindowMargins->{{Automatic, 1018.5}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
SpellingDictionaries->{"CorrectWords"->{"respectivos"}},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"50ed31d1-8c5d-412a-9a5e-a5c52d1df12d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 458, 9, 160, "Title",ExpressionUUID->"92ed6825-ee5b-4946-9d45-5c8bced03cbe"],
Cell[1041, 33, 362, 9, 149, "Subtitle",ExpressionUUID->"97592c5c-f144-465d-a127-a37ccf76f84f"],
Cell[CellGroupData[{
Cell[1428, 46, 153, 3, 67, "Section",ExpressionUUID->"739bb349-cfcd-4ac7-8558-83b6daee5b24"],
Cell[1584, 51, 1843, 53, 138, "Text",ExpressionUUID->"46e7fd58-6aee-4c36-89d4-6d989677a0ad"],
Cell[CellGroupData[{
Cell[3452, 108, 41244, 682, 348, "Subsubsection",ExpressionUUID->"2a3ce3e9-1f11-4614-9202-34f6e8bb7d3f"],
Cell[44699, 792, 221, 4, 35, "Text",ExpressionUUID->"69bae758-ad39-4764-9314-8840f9bccc3c"],
Cell[44923, 798, 316, 6, 69, "Code",ExpressionUUID->"9582dc03-04cd-4e67-90e2-92ecea7e2cb8"],
Cell[45242, 806, 271, 4, 35, "Text",ExpressionUUID->"673c7760-6f78-46bd-91c8-cc76138e7a3e"],
Cell[CellGroupData[{
Cell[45538, 814, 2861, 50, 86, "Code",ExpressionUUID->"6232ef19-75e5-47d4-b5af-0c6cc268c42b"],
Cell[48402, 866, 2327, 35, 32, "Output",ExpressionUUID->"c3e0d3b7-69bd-4e83-a130-44041b291f9f"],
Cell[50732, 903, 2455, 39, 32, "Output",ExpressionUUID->"88fa5368-8bcf-4afb-adfe-2db8feb9a7a0"],
Cell[53190, 944, 2219, 31, 32, "Output",ExpressionUUID->"998125d6-ad0d-4dd9-8e23-78f75ac58ce4"]
}, Open  ]],
Cell[55424, 978, 272, 6, 35, "Text",ExpressionUUID->"97ea9174-8f3b-42a8-b40e-4eef1b813b6c"],
Cell[CellGroupData[{
Cell[55721, 988, 2420, 57, 69, "Code",ExpressionUUID->"f8478010-9a8e-4a59-a6c5-9fdc3c3d115f"],
Cell[58144, 1047, 2028, 36, 32, "Output",ExpressionUUID->"ca2c0897-11cb-4661-947f-b796e16620d7"],
Cell[60175, 1085, 2026, 36, 32, "Output",ExpressionUUID->"42082315-0554-4727-ab38-27d5692e2dd2"]
}, Open  ]],
Cell[62216, 1124, 413, 8, 35, "Text",ExpressionUUID->"11a4e1b4-94be-4164-8a54-980c9abcbec8"],
Cell[CellGroupData[{
Cell[62654, 1136, 6731, 136, 212, "Code",ExpressionUUID->"4235b9db-736c-4ca5-abaf-2a204c60e728"],
Cell[69388, 1274, 2092, 42, 48, "Output",ExpressionUUID->"3d52ea13-226f-48d9-a291-f80b3c203726"],
Cell[71483, 1318, 2742, 62, 48, "Output",ExpressionUUID->"ad7505a6-c1bf-48c5-a7c9-8cb5e11b7e0e"]
}, Open  ]],
Cell[74240, 1383, 297, 5, 35, "Text",ExpressionUUID->"842643c8-bd35-49fe-80d4-fb567fb30d39"],
Cell[CellGroupData[{
Cell[74562, 1392, 10634, 235, 337, "Code",ExpressionUUID->"51cdcca6-be4f-42e2-90a3-6f7c12cf6552"],
Cell[85199, 1629, 1794, 46, 48, "Output",ExpressionUUID->"9ee5c371-fc7d-471d-a948-9e56edaf8623"]
}, Open  ]],
Cell[87008, 1678, 424, 10, 35, "Text",ExpressionUUID->"2b801c00-765c-408c-8e77-5742b0a145fd"],
Cell[CellGroupData[{
Cell[87457, 1692, 1928, 53, 88, "Code",ExpressionUUID->"724c2ce2-df19-4d2d-b0a0-0504be534d96"],
Cell[89388, 1747, 1673, 34, 48, "Output",ExpressionUUID->"cb828692-b8d3-4d53-88f5-6004557eb8c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91122, 1788, 178, 3, 68, "Section",ExpressionUUID->"a32c1b8c-a007-4bff-a5b9-e09ea38e38ca"],
Cell[91303, 1793, 335, 5, 35, "Text",ExpressionUUID->"66546405-d6c6-455f-b0e7-ea4c6718dc70"],
Cell[CellGroupData[{
Cell[91663, 1802, 3457, 85, 209, "Code",ExpressionUUID->"7e94619b-1e9d-4b80-beb8-b99e9bcc96f7"],
Cell[95123, 1889, 5159, 127, 78, "Output",ExpressionUUID->"a34835e6-6639-490c-8e68-2e44229a1af0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100319, 2021, 3271, 80, 142, "Code",ExpressionUUID->"0163a2cd-8974-48c2-83a8-a5630f304bb5"],
Cell[103593, 2103, 7101, 180, 98, "Output",ExpressionUUID->"031443ec-2c8d-4c1d-8e98-d73042d640b8"]
}, Open  ]],
Cell[110709, 2286, 321, 7, 35, "Text",ExpressionUUID->"00dc0acd-343b-4b7f-8fed-f624da75db43"],
Cell[CellGroupData[{
Cell[111055, 2297, 2624, 59, 103, "Code",ExpressionUUID->"6dbacf29-3331-420e-9f3c-07f76b8340fa"],
Cell[113682, 2358, 6327, 169, 132, "Output",ExpressionUUID->"77013bd9-9d09-4435-929d-4b94e5c13560"]
}, Open  ]],
Cell[120024, 2530, 152, 3, 28, "Input",ExpressionUUID->"135af456-4026-46e2-bb4d-a9c5d4314344"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120213, 2538, 153, 3, 67, "Section",ExpressionUUID->"f8c24243-e284-40e9-9ad0-7d2fb3723a52"],
Cell[120369, 2543, 999, 26, 37, "Text",ExpressionUUID->"452857ab-abea-4650-be9b-d32694b61e86"],
Cell[CellGroupData[{
Cell[121393, 2573, 2209, 58, 156, "Code",ExpressionUUID->"3acf1e86-1634-48ba-be33-1c01b7cf4202"],
Cell[123605, 2633, 2926, 78, 84, "Output",ExpressionUUID->"e68e69e5-5a08-4f79-8ccd-7704b48c51f9"]
}, Open  ]],
Cell[126546, 2714, 311, 7, 35, "Text",ExpressionUUID->"ccdecf72-1d02-42a3-99b5-f1f90285748c"],
Cell[CellGroupData[{
Cell[126882, 2725, 3246, 71, 121, "Code",ExpressionUUID->"59090002-d7b6-405a-a555-24b1da34ee6a"],
Cell[130131, 2798, 2884, 77, 118, "Output",ExpressionUUID->"49b0efdf-9ec0-4638-99b4-963aa8c58dcd"]
}, Open  ]],
Cell[133030, 2878, 878, 23, 38, "Text",ExpressionUUID->"56a9a641-2263-4674-9e8f-bad84f7e1e73"],
Cell[CellGroupData[{
Cell[133933, 2905, 3218, 73, 90, "Code",ExpressionUUID->"135c8d41-99c0-44bc-ba4c-710f1292a6f3"],
Cell[137154, 2980, 2831, 73, 126, "Output",ExpressionUUID->"6331c3d0-f3b7-425b-a2a7-0f2d963623e2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140034, 3059, 151, 3, 67, "Section",ExpressionUUID->"d2897609-6874-4bb0-87bf-c2c1ca1c96d1"],
Cell[140188, 3064, 1058, 21, 58, "Text",ExpressionUUID->"5f711779-f8d5-4bc2-8344-e1da913b6e7c"],
Cell[CellGroupData[{
Cell[141271, 3089, 1415, 26, 68, "Code",ExpressionUUID->"d2597db5-5b59-4b86-a8a7-b076be8a6501"],
Cell[142689, 3117, 3594, 86, 132, "Output",ExpressionUUID->"015bf920-1975-42e7-87aa-e02a3789dec2"]
}, Open  ]],
Cell[146298, 3206, 60262, 1010, 382, "Text",ExpressionUUID->"0e34c1a0-2ab2-4e82-858d-671c4254445e"],
Cell[CellGroupData[{
Cell[206585, 4220, 1633, 40, 86, "Code",ExpressionUUID->"0e272b74-1aca-43e9-841c-ec7a44986a1f"],
Cell[208221, 4262, 2140, 63, 96, "Output",ExpressionUUID->"eadf8284-2798-47aa-b255-8d4d1203f189"]
}, Open  ]],
Cell[210376, 4328, 2804, 66, 102, "Text",ExpressionUUID->"50eac79e-8d39-4fd5-97dd-37df40290047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213217, 4399, 321, 5, 67, "Section",ExpressionUUID->"7e490e7f-83f5-4496-b4c2-f79c7695fee6"],
Cell[213541, 4406, 737, 14, 81, "Text",ExpressionUUID->"0847729e-c879-44c2-b8d7-e5391237e769"],
Cell[214281, 4422, 654, 17, 86, "Code",ExpressionUUID->"1577ab40-3324-41aa-9b52-6f1fe4c621ea"],
Cell[214938, 4441, 1122, 31, 86, "Code",ExpressionUUID->"a3ba0f8c-72a7-4d9a-bef5-731c3c97815f"],
Cell[216063, 4474, 4576, 122, 121, "Code",ExpressionUUID->"fa65f2d7-2f57-40a8-8e75-9c5311b022b7"]
}, Open  ]]
}, Open  ]]
}
]
*)

